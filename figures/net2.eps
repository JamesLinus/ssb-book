%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(TM) 7.0
%%AI8_CreatorVersion: 10.0
%%For: (Eric Klavins) (University of Washington)
%%Title: (net2.eps)
%%CreationDate: 4/18/2007 12:00 PM
%%BoundingBox: 162 620 261 669
%%HiResBoundingBox: 162.731 620.8333 260.3823 668.9719
%%DocumentProcessColors: Black
%%DocumentFonts: Myriad-Roman
%%DocumentSuppliedFonts: Myriad-Roman
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_typography_AI5 1.0 1
%%+ procset AGM_Gradient 1.0 0
%%+ procset Adobe_ColorImage_AI6 1.1 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_pattern_AI5 1.0 0
%%+ procset Adobe_cshow 2.0 8
%AI5_FileFormat 3.0
%AI3_ColorUsage: Color
%AI3_IncludePlacedImages
%AI7_ImageSettings: 1
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 0 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 1 3 () 
%AI3_TemplateBox: 306.5 395.5 306.5 395.5
%AI3_TileBox: 12 12 600 780
%AI3_DocumentPreview: Header
%AI5_ArtSize: 612 792
%AI5_RulerUnits: 2
%AI5_ArtFlags: 1 0 0 1 0 0 1 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI5_OpenToView: 82.5 739.5 1 782 663 26 0 1 108 145 0 0
%AI5_OpenViewLayers: 7
%%PageOrigin:12 12
%%AI3_PaperRect:-12 780 600 -12
%%AI3_Margin:12 -12 -12 12
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_typography_AI5 1.0 1
%%Title: (Typography Operators)
%%Version: 1.0 1
%%CreationDate:(6/10/1996) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_typography_AI5 68 dict dup begin
put
/initialize
{
 begin
 begin
	Adobe_typography_AI5 begin
	Adobe_typography_AI5
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
 end
 end
	Adobe_typography_AI5 begin
} def
/terminate
{
	currentdict Adobe_typography_AI5 eq
	{
	 end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	/_pntr 0 ddef
	{
		counttomark -1 roll
		dup type dup /marktype eq
		{
			pop pop exit
		}
		{
			/nametype eq
			{
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				/_pntr exch ddef
			} ifelse
		} ifelse
	} loop
	_tempEncode
} def
/havefont
{
	systemdict /languagelevel known
		{
		/Font resourcestatus dup
			{ exch pop exch pop }
		if
		}
		{
		systemdict /FontDirectory get 1 index known
			{ pop true }
			{
			systemdict /fileposition known
				{
				dup length 6 add exch
				Ss 6 250 getinterval
				cvs pop
				Ss exch 0 exch getinterval
				status
					{ pop pop pop pop true }
					{ false }
				ifelse
				}
				{
				pop false
				}
			ifelse
			}
		ifelse
		}
	ifelse
} def
/TE
{
	StandardEncoding 256 array copy modifyEncoding
	/_nativeEncoding exch def
} def
/subststring {
	exch 2 index exch search
	{
		exch pop
		exch dup () eq
		{
			pop exch concatstring
		}
		{
			3 -1 roll
			exch concatstring
			concatstring
		} ifelse
		exch pop true
	}
	{
		pop pop false
	} ifelse
} def
/concatstring {
	1 index length 1 index length
	1 index add
	string
	dup 0 5 index putinterval
	dup 2 index 4 index putinterval
	4 1 roll pop pop pop
} def
%
/TZ
{
	dup type /arraytype eq
	{
		/_wv exch def
	}
	{
		/_wv 0 def
	} ifelse
	/_useNativeEncoding exch def
	2 index havefont
	{
		3 index
		255 string
		cvs
		
		dup
		(_Symbol_)
		eq
		{
			pop
			2 index
			findfont
			
		}
		{
			1 index 0 eq
			{
				dup length 1 sub
				1 exch
				getinterval
				
				cvn
				findfont
			}
			{
				pop 2 index findfont
			} ifelse
		} ifelse
	}
	{
		dup 1 eq
		{
			2 index 64 string cvs
			dup (-90pv-RKSJ-) (-83pv-RKSJ-) subststring
			{
				exch pop dup havefont
				{
					findfont false
				}
				{
					pop true
				} ifelse
			}
			{
				pop	dup
				(-90ms-RKSJ-) (-Ext-RKSJ-) subststring
				{
					exch pop dup havefont
					{
						findfont false
					}
					{
						pop true
					} ifelse
				}
				{
					pop pop true
				} ifelse
			} ifelse
			{
				1 index 1 eq
				{
					/Ryumin-Light-Ext-RKSJ-V havefont
					{/Ryumin-Light-Ext-RKSJ-V}
					{/Courier}
					ifelse
				}
				{
					/Ryumin-Light-83pv-RKSJ-H havefont
					{/Ryumin-Light-83pv-RKSJ-H}
					{/Courier}
					ifelse
				} ifelse
				findfont
				[1 0 0.5 1 0 0] makefont
			} if
		}
		{
			/Courier findfont
		} ifelse
	} ifelse
	_wv type /arraytype eq
	{
		_wv makeblendedfont
	} if
	dup length 10 add dict
 begin
	mark exch
	{
		1 index /FID ne
		{
			def
		} if
		cleartomark mark
	} forall
	pop
	/FontScript exch def
	/FontDirection exch def
	/FontRequest exch def
	/FontName exch def
	counttomark 0 eq
	{
		1 _useNativeEncoding eq
		{
			/Encoding _nativeEncoding def
		} if
		cleartomark
	}
	{
		/Encoding load 256 array copy
		modifyEncoding /Encoding exch def
	} ifelse
	FontName currentdict
 end
	definefont pop
} def
/tr
{
	_ax _ay 3 2 roll
} def
/trj
{
	_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
	/Tx
	{
		dup
		currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
	} ddef
	/Tj
	{
		dup
		currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
	} ddef
} def
/a1
{
W B
} def
/e0
{
	/Tx
	{
		tr _psf
	} ddef
	/Tj
	{
		trj _pjsf
	} ddef
} def
/e1
{
W F 
} def
/i0
{
	/Tx
	{
		tr sp
	} ddef
	/Tj
	{
		trj jsp
	} ddef
} def
/i1
{
	W N
} def
/o0
{
	/Tx
	{
		tr sw rmoveto
	} ddef
	/Tj
	{
		trj swj rmoveto
	} ddef
} def
/r0
{
	/Tx
	{
		tr _ctm _pss
	} ddef
	/Tj
	{
		trj _ctm _pjss
	} ddef
} def
/r1
{
W S
} def
/To
{
	pop _ctm currentmatrix pop
} def
/TO
{
	iTe _ctm setmatrix newpath
} def
/Tp
{
	pop _tm astore pop _ctm setmatrix
	_tDict begin
	/W
	{
	} def
	/h
	{
	} def
} def
/TP
{
 end
	iTm 0 0 moveto
} def
/Tr
{
	_render 3 le
	{
		currentpoint newpath moveto
	} if
	dup 8 eq
	{
		pop 0
	}
	{
		dup 9 eq
		{
			pop 1
		} if
	} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm
{
	_ctm setmatrix _tm concat
	_shift aload pop _lineorientation 1 eq { exch } if translate
	_scale aload pop _lineorientation 1 eq _yokoorientation 1 eq or { exch } if scale
} def
/Tm
{
	_tm astore pop iTm 0 0 moveto
} def
/Td
{
	_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/iTe
{
	_render -1 eq
	{
	}
	{
		_renderEnd _render get dup null ne
		{
			load exec
		}
		{
			pop
		} ifelse
	} ifelse
	/_render -1 ddef
} def
/Ta
{
	pop
} def
/Tf
{
	1 index type /nametype eq
	{
		dup 0.75 mul 1 index 0.25 mul neg
	} if
	/_fontDescent exch ddef
	/_fontAscent exch ddef
	/_fontSize exch ddef
	/_fontRotateAdjust _fontAscent _fontDescent add 2 div neg ddef
	/_fontHeight _fontSize ddef
	findfont _fontSize scalefont setfont
} def
/Tl
{
	pop neg 0 exch
	_leading astore pop
} def
/Tt
{
	pop
} def
/TW
{
	3 npop
} def
/Tw
{
	/_cx exch ddef
} def
/TC
{
	3 npop
} def
/Tc
{
	/_ax exch ddef
} def
/Ts
{
	0 exch
	_shift astore pop
	currentpoint
	iTm
	moveto
} def
/Ti
{
	3 npop
} def
/Tz
{
	count 1 eq { 100 } if
	100 div exch 100 div exch
	_scale astore pop
	iTm
} def
/TA
{
	pop
} def
/Tq
{
	pop
} def
/Tg
{
	pop
} def
/TG
{
	pop
} def
/Tv
{
	/_lineorientation exch ddef
} def
/TV
{
	/_charorientation exch ddef
} def
/Ty
{
	dup /_yokoorientation exch ddef 1 sub neg Tv
} def
/TY
{
	pop
} def
/T~
{
	Tx
} def
/Th
{
	pop pop pop pop pop
} def
/TX
{
	pop
} def
/Tk
{
	_fontSize mul 1000 div
	_lineorientation 0 eq { neg 0 } { 0 exch } ifelse
	rmoveto
	pop
} def
/TK
{
	2 npop
} def
/T*
{
	_leading aload pop
	_lineorientation 0 ne { exch } if
	Td
} def
/T*-
{
	_leading aload pop
	_lineorientation 0 ne { exch } if
	exch neg exch neg
	Td
} def
/T-
{
	_ax neg 0 rmoveto
	_lineorientation 1 eq _charorientation 0 eq and { 1 TV _hyphen Tx 0 TV } { _hyphen Tx } ifelse
} def
/T+
{
} def
/TR
{
	_ctm currentmatrix pop
	_tm astore pop
	iTm 0 0 moveto
} def
/TS
{
	currentfont 3 1 roll
	/_Symbol_ findfont _fontSize scalefont setfont
	
	0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
	setfont
} def
/Xb
{
	pop pop
} def
/Tb /Xb load def
/Xe
{
	pop pop pop pop
} def
/Te /Xe load def
/XB
{
} def
/TB /XB load def
currentdict readonly pop
end
setpacking
%
/X^
{
	currentfont 5 1 roll
	dup havefont
		{
		findfont _fontSize scalefont setfont
		}
		{
		pop
		exch
		} ifelse
	2 index 0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
	pop	pop
	setfont
} def
/T^	/X^	load def
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.2 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 50 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 40 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/channelcount 0 def
	/sourcecount 0 def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIDataProc null def
	/XIVersion 6 def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
end
currentdict /_colorimage known not {
	/colorimage where {
		/colorimage get /_colorimage exch def
	}{
		/_colorimage null def
	} ifelse
} if
/_image systemdict /image get def
/_currenttransfer systemdict /currenttransfer get def
/FourEqual {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/TestPlateIndex {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 FourEqual { 
				/plateindex 0 def
			}{
				0 1 0 0 FourEqual { 
					/plateindex 1 def
				}{
					0 0 1 0 FourEqual {
						/plateindex 2 def
					}{
						0 0 0 1 FourEqual { 
							/plateindex 3 def
						}{
							0 0 0 0 FourEqual {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/clrspaceissepn {
	type /arraytype eq 
} def
/clrspacegetname {
	dup clrspaceissepn {dup length 2 sub get}{pop ()} ifelse
} def
/clrspacegetalt {
	aload pop pop pop colormake
} def
/clrspacegetcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/clrspacemarksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				/findcmykcustomcolor where {
					pop
					dup length 2 sub get
					0.1 0.1 0.1 0.1 5 -1 roll
					findcmykcustomcolor 1 setcustomcolor
					systemdict /currentgray get exec
					1 ne
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/colormake {
	dup clrspacegetcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/colorexpand {
	dup clrspacegetname exch
	dup clrspaceissepn {
		clrspacegetalt
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				clrspacegetalt colortint colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/WalkRGBString {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/WalkCMYKString
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/StuffRGBIntoGrayString
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/StuffCMYKIntoGrayString
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/RGBToGrayImageProc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		dup length 3 idiv string
		dup 3 1 roll 
		
		/StuffRGBIntoGrayString load exch
		WalkRGBString
 end
} def
/CMYKToGrayImageProc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		dup length 4 idiv string
		dup 3 1 roll 
		
		/StuffCMYKIntoGrayString load exch
		WalkCMYKString
 end
} def
/SeparateCMYKImageProc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcecount 0 ne {
			sourcearray plateindex get exec
		}{			
			sourcearray 0 get exec
			
			dup length 4 idiv string
			
			0 2 index
			
			plateindex 4 2 index length 1 sub {
				get 255 exch sub
				
				3 copy put pop 1 add
				
				2 index
			} for
			pop pop exch pop
		} ifelse
 end
} def
	
/ColorImageCompositeEmulator {
	pop true eq {
		Adobe_ColorImage_AI6_Vars /sourcecount get 5 add { pop } repeat
	}{
		Adobe_ColorImage_AI6_Vars /channelcount get 1 ne {
			Adobe_ColorImage_AI6_Vars begin
				sourcearray 0 3 -1 roll put
			
				channelcount 3 eq {/RGBToGrayImageProc}{/CMYKToGrayImageProc} ifelse
				load
		 end
		} if
		image
	} ifelse
} def
/colorimage {
	Adobe_ColorImage_AI6_Vars begin
		/channelcount 1 index def
		/sourcecount 2 index 1 eq { channelcount 1 sub } { 0 } ifelse def
		4 sourcecount add index
 end
	
	dup 8 eq exch 1 eq or not {
		/_colorimage load null ne {
			_colorimage
		}{
			Adobe_ColorImage_AI6_Vars /sourcecount get
			7 add { pop } repeat
		} ifelse
	}{
		dup 3 eq TestPlateIndex dup -1 eq exch 5 eq or or {
			/_colorimage load null eq {
				ColorImageCompositeEmulator
			}{
				dup 1 eq {
					pop pop image
				}{
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq {
						gsave
						
						0 _currenttransfer exec
						1 _currenttransfer exec
						eq
						{ 0 _currenttransfer exec 0.5 lt }
						{ 0 _currenttransfer exec 1 _currenttransfer exec gt } ifelse
						
						{ { pop 0 } } { { pop 1 } } ifelse
						systemdict /settransfer get exec
					} if
					
					_colorimage
					
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq {
						grestore
					} if
				} ifelse
			} ifelse
		}{
			dup 1 eq {
				pop pop
				image
			}{
				pop pop
				Adobe_ColorImage_AI6_Vars begin
					sourcecount -1 0 {			
						exch sourcearray 3 1 roll put
					} for
					/SeparateCMYKImageProc load
			 end
				systemdict /image get exec
			} ifelse
		} ifelse
	} ifelse
} def
/proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace clrspacegetcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] makeimagedict _image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] makeimagedict _image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} stringapply
			} concatprocs _image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} stringapply
			} concatprocs false _pticomps
			/_colorimage load null eq {7 {pop} repeat}{_colorimage} ifelse
		} ifelse
	} ifelse
} def
/graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray proctintimage
} def
/cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK proctintimage
} def
/rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB proctintimage
} def
/tintimage {
	TestPlateIndex -1 eq {
		colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop graytintimage
		}{
			dup /DeviceRGB eq {
				pop rgbtintimage
			}{
				pop cmyktintimage
			} ifelse
		} ifelse
	}{
		dup clrspacemarksplate {
			plateindex 5 lt {
				colortocmyk plateindex get 1 exch sub
				exch {1 0}{0 1} ifelse () graytintimage
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () graytintimage
			} ifelse
		}{
			pop pop pop
			{pop 1} 0 1 () /DeviceGray proctintimage
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	0 setgray
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace tintimage
} def
/XIImage {
	0 setgray
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIChannelCount 1 eq {image}{false XIChannelCount colorimage} ifelse
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		XIType 1 eq {
			/_lp /null ddef
			_fc
			/_lp /imagemask ddef
		}
		if
		/XIVersion 7 def
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		/XIVersion 6 def
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEncoding 0 ne XIVersion 6 le and {
			currentfile 128 string readline pop pop
		} if
		XICompression 0 eq {
			/XIBuffer1 XIRowBytes string def
			XIEncoding 0 eq {
				{currentfile XIBuffer1 readhexstring pop}
			}{
				{currentfile XIBuffer1 readstring pop}
			} ifelse
		}{
			/XIBuffer1 256 string def
			/XIBuffer2 XIRowBytes string def
			{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
			/ASCIIHexDecode filter /DCTDecode filter
			/XIFile exch def
			{XIFile XIBuffer2 readstring pop}
		} ifelse
		/XIDataProc exch def
		
		XIVersion 6 le {
			0 0 moveto
			XIImageMatrix concat
			XIImageWidth XIImageHeight scale
			XIType 1 eq {
				/_lp /null ddef
				_fc
				/_lp /imagemask ddef
			} if
		} if
		XIEnable {
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 7.0 Full Prolog)
%%Version: 1.2 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 107 dict dup begin
put
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XA
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/_rgbtocmyk
{
3
	{
	1 exch sub 3 1 roll
	} repeat
3 copy 1 4 1 roll
3
	{
	3 index 2 copy gt
		{
		exch
		} if
	pop 4 1 roll
	} repeat
pop pop pop
4 1 roll
3
	{
	3 index sub
	3 1 roll
	} repeat
4 -1 roll
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq
	{
		findcmykcustomcolor
	}
	{
		/findrgbcustomcolor where not {
			4 1 roll _rgbtocmyk
			5 -1 roll
			findcmykcustomcolor
		}
		{
			pop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq
	{
		findcmykcustomcolor
	}
	{
		/findrgbcustomcolor where not {
			4 1 roll _rgbtocmyk
			5 -1 roll
			findcmykcustomcolor
		}
		{
			pop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		endString eq
		{
			cleartomark stop
		} if
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		dup beginString eq
		{
			pop /layerCnt dup load 1 add store
		}
		{
			endString eq
			{
				layerCnt 1 eq
				{
					cleartomark stop
				}
				{
					/layerCnt dup load 1 sub store
				} ifelse
			} if
		} ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	4 npop
	6 1 roll
	pop
	4 1 roll
	pop pop pop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c false def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
		pop pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade true put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_typography_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI3_BeginRider
currentpacking true setpacking
%%BeginFont: Myriad-Roman
%!PS-AdobeFont-1.0: Myriad-Roman 001.000%%CreationDate: Mon Jul 25 16:15:04 1994%%VMusage: 28005 34897%% Myriad is a trademark of Adobe Systems Incorporated may be registered in %% certain jurisdictions.11 dict begin/FontInfo 10 dict dup begin/version (001.000) readonly def/Notice (Copyright (c) 1992, 1994 Adobe Systems Incorporated.  All Rights Reserved.Myriad is a trademark of Adobe Systems Incorporated may be registered in certain jurisdictions.) readonly def/FullName (Myriad Roman) readonly def/FamilyName (Myriad) readonly def/Weight (Regular) readonly def/isFixedPitch false def/ItalicAngle 0 def/UnderlinePosition -100 def/UnderlineThickness 50 defend readonly def/FontName /Myriad-Roman def/Encoding StandardEncoding def/PaintType 0 def/FontType 1 def/FontMatrix [0.001 0 0 0.001 0 0] readonly def/UniqueID 41987 def/FontBBox{-46 -250 1126 831}readonly defcurrentdict endcurrentfile eexecfcecc98c2aefb25089edad915372f7632807d0d80113c0fbda4614dda7560bffacbeaa4f371815c991f0682cbc45f51895a8e6fc33b63b87db33f2f141b34c80b26ba7d9f30c5d0811a31c14ca6d1250d33478395ee2096ad1b742ed78b95145f606e652e4d2bd83f4cf7d67cdca3268c1d165c3cf471a6094892362712d5e
19b5084335eaca009edef0af8bc976eadf7c336b76887cf63653a555e0538ab47d8bf6a8c45725720630bc185740fdab20647654dd2e6d2db3254e482024a1dd45e865357b140bacb98f0a8066087af1076333e21e51e77d70bad81d05e6b7e6f4d3a88423efbdf6eb3b9d4ca66e9ad97e0bde315f13542863a4a6b71a9c35
60eaea09bb5a75ea3eaf84bfd6a5549a045e20540ac787976353c114cca7c97ce57501589cc846a1320ba2c618644bd7ead0f736873e8d07e7f550df45b51deefee29c13aa19896638a8f580a26665a8d50511d6a0a1d8822fe99e3d82a19244ed668b2d510ea6ef05c17002e01d0a4c4154288c2156ae5fba08cfb2394c78
221f1b67ca0c6dd8bc930eb9cd6d5b77619e5cfb0e19da187d81124f0793bc0eac6aff145fd8deb6b9100aad8798983107b205f36eb8f7c6b46c6149ccda404549845c5177d0b318b4e621f7c02260faf5e4af8463b776c5b12e6fb1d6735ef91f91d9132268c0c67f18915d0807f99694d4ae8c6d9d495b000604d311a9b9
6d2520458341a4efa4fa686e80300f18d6681a99a5c3eaeb4767306554865d708a58419b05c24200c59454847988d50b7abbe83a2756cc5781be5b71c28318750549b21f7ce539909e8425c5c38a4a24cad2cb70396b88777346c838c7c8ae27833df843db788ca8a3f0594707a2e54f427a416d3e07d838039d5edc835b68
ea0aac86f3bd470b37f7ba7c53045a8460d1e7a3175fc90d877ed022ba3f45622569455e31a3d1dc8261541bcd25c8b52845ce4a9dc2e3eedadbcbca781989cf5c51284a4e74b7c0d163c25a608196e89ca4e3444395562311d405ab1707e3dbcba475c61e3774137432519b9e0384112c5da682e59ed4c7e1db1ee381d8fe
a4ced481f9823b96b719e51b5f059d26949588d5d33c4149ac36cfcac4ca83210c06b15377d9911bca684f27ab16f18ba374261a00514f0ff70163c0d5c41093cc02725b828f004cd04c5297bfc77d3185475d17569f430472d6d67aed94ebcf0b9808ed4489c233e69eb9139561dd741605b62511aaa09a44fc841851ccd7
80f15c71bdea5386f1bdcc7e30fc4b07b461f21bab5fc313d3424519359f17a4f5f44332ebc0bc269892cb1d91a414817b152a77192c21a0501b586a667f3a5352940ca13f840f5377f30c60b6740ff7fa07964332c76def2b8925245fab5de0ae53a0226fab8218c703a4bbc6733de7a68114d6048f85e7ba1aa4f3b044fa
052182ccc1b98e9a33ee688bcc29d195ee42d78d814b058abcf57d8970241d14c21f66107ae839a4b3a8ba06f6300d6b1199f3c255140776c5e1b9db2cfe374926e90bfa7ed45dc371ea7a3a9715347b17c9cf2ce89fbd64f7a932146cf5f766a702936791071ce8d01c7c36f77c1796da835f45b43ffef471feac9f548c39
ee0d15805da6381d46062e084c3aca65b9abd3aa4636bdee45cb6ae316302385bfe24279f27d9017d98233d0839a17c34c40a140b9ebb38bece8bb0ea78b602573d457bcba967cba9191fc3e689c2204f798b8ce4785d908a20a8b7af26a59da060b181c1375745de477c32b46e059157e1bff21058709f5ed1e8a561505f0
ed7fbe0212099e9dbe1c02412f63eb6274f62db5075d74c2aad39a2305a52c4267fefc948faeb4afa2de78ec35e2cb02f212e5f772ccb07ca14636535ca1330c44afb15689daca6808c32592bab5c1427f87572983d82ca79707177e7d2799df80faeb622efdd1afcfdf20dc7a6c18d0f3ac98e9cabe609d0ddd71ff2cf57d
438e3caf3933449994fa51703c49ccbe30982ad2ac4e09f1e10dc393eca013bab3de6205e7c78ebbdc19f8d30d6087acc505ef874f28f299993aa81f21bdc769e0d238dfc42057eb50fdf73b9a637425fbb2e79876941d51720e5cd95e42ee0d8d0c3c2460272508530ecdb2a086f11fa43560f6dbe830f455b26684f6927c
b653a092af8c202f39c31cccd2f0ac5de6d5b03b66e97872e4eae9451a3162514a6a7b4e6f55d1742b3fd1cbcf8b0f75ec005244759bd68e7781459a2519d59b16f9c88d4cd4fb37d6ba5fa740ddfb7dbccf5a6a95f7c4c7d1e62ca9ab6cc08dfd08ca2f1aa9dd44012de2be0b26c222d43eeb3f987a396e498f028ddc3528
dd3d956a9e14e6776c4ca5ae0dbad3227b1dc293df5a68679fcf7463b0f5107469f31f688e241e4058437bcaa3debe0a522a797088521405d8e5ca15c23d77701e441d10b92c5a6e0f731d6073e328f89051625b4f788222062ffcccb5ad208805c17b28e97167510b891b65b6f3583fd60945081fbfe0e78f317947230517
545be57c398e2a60f51c622473fcb3fdd659a5cf4c6d8f2337bc3cd617d3aa6d080d4247a7d78c7b1963ad2ac7e0924e29f5184dd1082e58b0e8218c7b390d07412a2cc18239a8ed7414f9372375ad6d546aa06c9735867665cea3619b0912399adb32995b6dff08ce7ccff0320ed318a5a609259895d00948876707bc9631
c4c5fe755c4c884b09f3f7e6694ad188dd3a7d61d1ebe85c61eb3067c7a12ac3719b1f1f9d099fdb0a6b118fdddb67ed0107415894e427c5f5895f5258dbbb6395504d93f9012d76ecd59ba1f134430c92e944cdac08f57a19341161acd1d7ded4b4aae204bdb10f9fc3684a47a4958f815bb544e6abf7f9bd2afe96e2dd7e
eef096bb1654faa5c80fc2c66d09968a1238b9671bc6d96fcdd6aa2a402d0fa9db18650556a2ae8c44550a03d98cfc02730d8cf948f1a84e3a0edf4c209cdadef9d780e408d8d161965249e48856cf33de593276b50e82abe13b81ee3d67bef7eea9562563238d539b3a256dfaa10c4867bb48c67795a15160d54973d84a49
19fb5855b5f11e5e51a64ee190a25b3beb482c07e61b8663c3d79f4b3a2f5b8c749d3603e6eadab1e89fb73c426f12cc026791ac66fd1dd83ad47eaa9a9aa23f304ea10e6862f4fb0d41d676f7a42f5512f3b8098c8b6fe7c50dd0af3222c8b4b00aa57199354998ab52ac54d30d17b24e22306b74744c42b434eaebddbf8d
1d3d3f1504d6caab0446b8ffa56ccecc8ec9976d19d0d9b6a6e0ea7e44c6fdb29f0b50ae017aa453deb992db2ae3087b78beaf7211b00200c65089f5ed726d4251dd284d22fa28e28fbe0f1b064723d3196af84cb1644e39f61fbfbdde02cbf70465789380e1912b7d3cc8118428ed9af4f633790b4d219f09c13c3e8f3f73
9def2f967c7bfeecd25daf9b5a747eb281d2535b31c7dc99e34ee537a478ecc8174c6a3a1ed0c2c74b871493599be9a2ecccee1136fc7eaaa6f30758b607700faa7d19b586fa6aa4dc5a813ac33fc3e28d226b6665dac7de35a014f89a31195a416833e9a13123be1ae1518effefc0523499f54377362bbcf9d91650d6d283
e1bc19a5f2e53e5e1973c406bc3b4878d4a4b8278b878d9bce540ca936d369af2d1c31850d5abd466083845e1479b51d368df23c5243c131db75853e962c66db13f8ffc95affaf6336abce1cd0a699e733aa64b29ebe04915471de4d165e4d85573ec24ff0e09bd7ea8cba8169299eeabfdbdff58bb12460e20b9145b67872
484d911af649e1d39fb9a44aeba926f3a83dd87202020f674613001107a5d1f184b9ed1c1f8eb24a32f41defee4874b4ecf3d9897c00c2a859ba745e11304823f59c0aea5bfa21081b2eafad4c4c94ef891ce7c97f388ff1753e1d53d485e9d5b18e333f9436572eced77d9197c3deee53a26dea76f0a738aa979f4f2a358b
725eb5b2321e717ff9bec75804606fd0489a36852ff5474df878831431a0257d2b6909e5b954afc9a49dab3aca5b02e02e3565e762d240542917fc4cc781bceab43f7c53950ad992e596582bf87ee042f4bc7f9e91ea20ba6561019e184a34c8a5e17d7912edc431fcea320c7066afc23bdb5f64c3606b11b1fe9e810a9c82
2e60bb187be38c7b87b35539048b8a507233a86f6b8b363656eaca0f8de48f3cdfba3616a743c579a7ef6b922d2d282b1c77cbda888177ba7037513b64d21a8a6a09ffc1e3d46769ae279e68799e520a412ff61d952aa3b552159e3814c8f185731c7269bb375c1a1e266dd2f73c7708635c2ed5a52d362c124a76c92410dd
3f00f21fe81977c80051eb8bf67997efcafb1593ca9307301c2ecf27c08b568e404d1d1414dc2220d73c6a352a2624c916ada967c3d189a1b893d41139c948b04d6f808452fcfde55603527e598a6590ed920be0d75cfe65e105bfee9cddaa6fc9934c42f611ae55681be92fc300e7249af0d7f863e2b69ce5bd4ea2ceab04
8dbf1548639ced835beca4cb4da0fd79e7936a451691f23c1859231f2bd61d239a352d33e063142ef8844b777e28eef2f286bdf4ea7326ea3ac9719a4cdb181640727493a2b94b7a9df5cf6844064558c63f27a72892b19812828d32c8c76a52636f16fce7c04a3a38c78abe0179e533746e1e1c8ac3e3bbe106ba78b05e6a
27f6fa044cf6281acfc616fbd096d15b607b86a61644947c5caf286f43223ecd23873e67c555f614759a4ae0bc8b78c136a1b050e79c682e1545e2d3c018b7321e63ab4f61f7173fc172d563a90b072b2fab9bf4d184650c1b6fbb6b14cc43c354fb4dd10fe294f9e7e2d1ad12e49f517775962e6edb08dc6fd08e554d014f
57bd2707948f910e79946e5992a7152893e562c4adef8b17f8e9c642e0cba85fd3998de2336908f3bc7d6f1c7af67020d5398b4356837e256fab4d507221db4772022b13022e02f3c72f91fe55758a990143fb641fc74b8968bd9c66c9829a7ec6898d0216d33aec6ce97e6d408712b81130fced7a2f83078a2a25fb6ccf74
ee3a76ef72a4eb35cda2e35aef2d203fc37d2d5497725c5491fc2029f90f19973512c8ca94e560780075b41f8cd42aa5a2b43261a0008201f4fdbf34b768f0e033692725bd196ab644a5c4680102d5b665b7061097844c1a663bbf1be878a2991c98fecc4b67508d7fe91b50c0aa373b02a19040bf72e6dd84a54dd0385f35
4af7b9288f434a80e79982107b31272e902cdd8d5306da0d306bb9ed2986d3498373442927a5c774769daf503c30616f24001cb17caf8d14d426c9d768b2ced9286ff6b0d1a932056e25aed939e893f4d9dbbbcb5f9817c6d0b0c469f1a9f6e2af3c5046808dc130e18673ae7bb5ee973229bbcd78a193e0360c9d4729bc92
933a65866eaa926fd9d7031ff212f3c770dff6740640dadc6238d1fa2b44e979edf743f2ce2227491776ea376dd1f833d7d4099cc8914e92decda2cb2bc9c82987ddad25097e7db47c4c4237f879085866856c68079bb837c87af84429bee7052a7e4e1a609a235501ea40c921bd5ce7050bbfa2c8cabd184c109d14d9e359
5603efbbd39715fa6959290eddd302be9417190a47c8d1e6d7b05bbe50bdaab53d8164413d28c2f2b684640f5cc8768e564023892b9f573b37ed8b4a49a82de14b097ee47c0edd61a0694820cee6afb2b9b836a06a420833976dbc30f081cb44876ce406261794ba472afa4e42a57784052f19cf1e9d46605044235ee32394
9e6d09c83b087fcd55dcd7245b717f09b5b584fe9fcc06ea9f785b790f5efefc8fe8bdf26e1ace1c05033c4dae7d271738159ed7d8da8145da39d7a73c7b54424c52424a60746a738fd4ff0c4af80ee7976790c7d4af15d1bd9dff8b21e21ea965feeca5c241be2b5b8ef1715596e3a5492ee5f67fba7f2532513ec40dd18b
03656b3f75c5d8515c1d14d385043418ea8d34b54e19e68264ff8c3d3c94bb9e41a47e2689ff90ab1c8eebc4ef16753017766cfaa4b583e48f8f6649eeb4aaaf7ccf549f2bccd421c7ec43d0a3e58f5fcf41da55255c38dcafbab0550fd7bcc7988a49d4efa19e96f83460cf1078dce4574b6feace55e587282addad042a77
7ad11b356ffd95af1cdd79982839a3d9835c78cadde2b7911fa4b9d3d8fef1736cc4e946942f887b023118f9d510c391b54d26728d7a2ecc75fdbc3183671c97d0139691723f07096829c8d3b74e0ca32b5b1ba45d2d429f2b3c1f7408bbadf1109e6aad96a464dc16bdfeefa0b15286ade98d69ba0f664f19c2abf7b5947c
9db71aebb11ffa9d0471db01dfa4849a90ddcb5cdc833984c119a66b5cf4b43b193a4d061a9f8b95cda62837c2c6b54f8de5bdaf9e20bb2c31cae1e23ec3fab581ffcd25915fd2a54b61f5d316a3443a2d417f65f4b9baea2309f1b7d610c5c412048be7e47ef4e48dd21b3b1627e06d530b07f5bb21723b26f51d1a2646c8
834a6f5ec1e736dead4ad042a09bb6c117fad1a3605e77ce6204aab04610a3af8efcf6f015bc26a6a937b0bf790e751a5829112b26122059ccd4972fd902f44b7efd3abf42a8b837aa1c36b6e38ce39bac31d6e187b24809f2f65aea0f98f8bbe1c28d2e27852d80a307c3878a481f0a3c1850d92d7f68fdfaaf22f87b79c8
73cf9b85ff3de77c2d479d996533689c53374262a28a5e2b27d375490ca2ceaa6e5f6c1ad2a4b044591c243dadf5a7f04788cb4138f263710cb535d5d1d3bdcc58a2cc2b978000aabb4d82de04523952b02232b5686034641dab18ef3c9fb8fb72e32361d62679fc0b79b638df933f2683650c9129f349952ffa0339f30bb0
efb733ec3c0592417801dee756fcf0e0cafcbaf192a31ae4bd2c5a450d578364446aaeb6e6dc70d633b4aa814ca0dd22b134eaac110f8e97830c71a7668a6af257b1920e45b49e407e0e4edc260d5efd2e5af984a24a292474ddb97859dd52f0777df04a38fa8162484a0bb509326a2c69557053f667a718e74f6961923b77
d0bf2e78f70c0c054080dc950a656d7f66a191f36b9fdc39d1ca58bbb7775eb6a74dc7cc5aeecad4d5be08ced461a2df18c79e93a79eaa9a30e75c5430c4dcbd3c0df71184dffdc78aa6163611ec6415c3e75919bf9f61d1a48b1c8c1d694236703e7f512cd94b48f05b231de1b00077a2c764b2ded73c07c12c5f4f1e5cca
80cd905364cede8535d12b83677f886644aee1e500deb52302d9eab6b8da7040b0e38cc8691a201b970bef3a61affc8016e345c9295f60cf8496d39021e1c8998b83cc0d5ba59ce7d0d39537dd4aca4d8709f2687ec57e82f8cfbc8ed01efa020d27dc30da72995a7f1ef26aeb85dd1cbe5565d38d407bee29356516615c12
d451f2792018fb7fd733841c6844ac937f0100235c70b4e0cad08b1e0eb2559972df3a06d387cb172876c7c886af2fe8997ec131ec9d5f0054d10a6da33de7cefc93d28625fd0b31c0c51d87a07e3ff150cbed0aa53658e3d5ca68a9dbad920f3fbeb7a669fa44287d41f43e70239748e7b86cd7f56d8747c942e91f031216
9f13b0d6a0b48e156772b09198024c4899334e9bac261eb9d2a12baf043beb9146c0f317684ed59f5102e168c8ebc1457a426f761bbd0ae6732de783d77b1ede35edac6c9c806cdaec4d2d1f2b0e0989c92c63de9406ed690199a3a6c92eaf35328ece2afe2259e98da23976049eeeb8904715e0c30ddc9f83cf9e9330d57c
375a91df767405b685faffd062575fa32d28b488bb21a9e9dd64146c5302385c01b3b32fc557d731a7365d556c229e02dbeee87f16190ee17b1d6610e49ba9ce2da2790646a0f4135fb1c7d4050a58668704ce08a45454f6272d38412e43fbd141a5a2fae3d78267bbef02b79ff6052307c55c0c08e0dfb447be19944306be
f250e552d87bdf34b06d7b9f5e15633b1a7c9a1c4ad5ae03d603f596a0f84a65c09c6bffa6284b6eac429799ac6e834ff8b2c749e04049b8c28c81966af8d9f8dc3b872a86754ee4fc2a6dc78b3d7ec8eedf585d54bbf8548314e65465ea1fe463f4788a7d26701b77c35e4f4ecbc8dfd5645313cba4ae9fd8708776104aa9
53c5ced171062cd919bf5430506de264b09359bb0d32c59484f369e05e402c86f9872c35a43aacfdede6619e16c206fc306e65b89f96ce9c591c64936d58ff343922e0650acbe34dce279d3f31dea0e7b467fef530816ca58264eaa8bf46576dc6a4c466d7603d033ff17b8a634ace8d0c12d742d1bceb2423b4802a5d9146
10e5f54c5bf9330950b24668f0727faab92b8da23923caba71b9d519c1df5867ec5696796d5c800cbd7dca45a3ee712087f07cb8320474783a2e8a89ce3bc5dc0fe83ec18c1d75695a0d13688ee8f59c7a6855ba80f4c8faf1051fa9511cdfd5bac786bd7226eef6c10aac0982fdd596934c2acceb044927b1f8b47eb0a730
eaba241abaddaecc1f565084df13ba16f70435a947b40cba85c8ff103d65829575a95b844709ea6c7cefa992e9984179ae4aee2b20ac658e4c45ac5c0d4109c7087545bb7ebd0856ba283e122286dea2f7e7a6de5e1974ca5c3ab3f3b36a3f1065f9fc6dd3c80c419762bcbfde2f2368b6714dc2d972ce96cd0001b5069df7
612f079f06115d0513916db8e31005001f81e7e45c8f9cf7376fb1073280aac3a28374f346c30d069e5e3227169b77be94de1fae88bd533a12fdd8b723ea665ed68eca303f8f7e67c704a4e754d569381322d18b2736999231b5a9146dd6777fa62fb92a61ddbfb8b5fac877de4d7b7a32f65cfee163e31790354ed262e66d
f841b21f5af794026d03973d586cc48ec892fda6ed2195ad5994e179d72b63b3615e1c8b37c5b4a35d5b9114848fa9b256e1aee627d3d2555f6f1155fa56d641701e83e9d0a0dea236ebb1cd06ba5df6b3d180e75f3a5d5bab694b50565f8d94096f007cb435e5012d11d50ff06b11e4627c2a68942b8e22afcf1fda80213a
49609d7f37135d7be8dd9c07a5fe279d02d2a4942ec98ba46a6161f9adc3403b77a2dafe021ba37e0a0ad63dcb1aa6ab490b5d7a716c1ec09de7a9d4d06eaad43b64cfb40c8e834a2467d0ec68d441ee0a9a67d0c4ce2f6e1b973a3b8d35e9c9f21a4885fc671cb022360d426146426ce1b48f7013d98a4c4ba74cbc07468b
de59944b07a91b3632b275e02b02b83f3d14678960165159c46a9a1919304814c608b4ddd708168181a5c4d6152eadf5fe8aa5a0ba3a4510dee18ebff1c1e2e222082b38378f7242f1a6635cc2e8dc10b6e8266df9da6d2b001990ad0559dc329f0623bc40925e4c075873ffecda33956174b95e5946dfb89d9c13c9791580
8517aba5b443d75a673d23e23aabe3ce8680a444047f106951bfd2a9c609bc4cade57d8d74872f89b31b98d54e2d382f16a56d8fed0583070443f386d564388495d48def25dcde0139cd2103b993ed7f2f0a42ebeef52e4e536fe0e77d4c7d2dd24979b3bc0dfb0c4fd798dbae91cd584f794eacae55b1693f98c24e807f32
82a17271c022e29e45c07f4a9343c6725466269c0b84c8fb7257630404df5fb9462ac1ca783b3c236d2b71aeea329950a0d596bf473d86eda8250258cff33b85a2d5fd39bb9576350f6da89756b9ad50f14a9209de8a4d5ddb1541c6d892a3c71d4769fb8668779a140fb2f7f3b9118304c403a3670c45bca56946ad2314d0
2345f6e8f6441f3d4fa11dcbdeb0cfde771d98b4a3c229c598c3930dce9bdac57de5c92d51e3dbc43ade500a4a4bc7ae95a377ae8789828660d5ce612b0a3fbd04cb47c8256d8c45cd883898719e04ddf66345d752a0d5807c08b69fe5aec2d62a1b03780c55b2d264f84205261e4042530a9d1cd83648b2f0fc092a1f3dd5
16d6d5ef68bf5959b1808646af474ac98eb91f1aa2a27c29b26cbf398b0543d161d6335ead1357f379e9be619f524416069f4fceb98bc9ae2b90b58bc2ae1cb4d783b961e15ae4914db5bce4b3661fb755d29d8be343c716213f9f08dfc1efe3cb5f8b6ead9f54512c9248798af5e963b56cf72fe0dd4cbd1f2875c2709c3b
5fdcb3a32f653a372373113ed1ad4e63e99dc9650a230b76caa23db7681bc2b8968bb436d734f7c52f7dbb5c407d6c78de709d020a7db6f5d87061e463c61dc847519241d3d83064ad3f4e276f6cd3786a66529acad1869f895ae59cd940b46a533fb77bf2fe875e86cf33dc6d153c486d9c3322b7b4e7534071ad001bcaac
d3ecdda204ad751101606c2f8a87e0d78439d82e8ced891ff633f7d47fe7c1d36ea903f635c68d3a43a6ec347a5c3a53217ff9854755efb34b9c2c86b8578a4b433a2e44e326f21d697adc5c78fae3ff19b0974c5a18da8f12dab89d9d496c867036b7184c6ff88779eef5a7f6138cc73ff6c17c243c96883233a17a31dca2
e6dbbd5cfae9ebf98c80f81ca4e4ef04e37fadffab35506d9e406f24ac7904e9f8704ec591c5c117b5a2444952301202c43a62d4782672bab9114b3f340503e3b5211fb545ff86dcde7f2b58acfbb9866a40ae1bd6a6b0254c5830c70762da6ab4eb2bb2ccb1ca03392c6d0cd411f2b8827f7e06b9bf43ea2db210f7fe3c37
02e902a1c8b0cdd52e9d170df67a90b642af92c779570a61d203d40dd619095807cac1786696b28c7ab139150c7abac724fcdb6ce755d5e85a6b55798d41b8ae80d073bc484c694e7b6dba32453d515d5807606d460303b065bf316c06ba6ce5d8fc13ad261028620ae820001c9f5288a3d9669dd2b630d789083eefbbccca
d7034813255e0658200d73f2e773934e66c52f2dcb56e4a8051bf67e5018fe7743087410c5bc3a55e8af500f10de3c88a43a18f5f7247652df8b028e4f2cd63ca29e638c11cbe5d479d3a907b17d1b88f5b8e89f1471421b74e3740e76a374d5f5a9fd81078d4d8aa385f5c6069bf62feb6e077c039076baae312feeb68b0f
e5929ab8547f064a2de9fd89c82be2ca99d83e8f7e344d9fb3b74111ec9c2ca79ef5430dcf3d07fd591f59a84c679b0b0c0f4245770bfc1b94c985d26a208f1f7386868c1d244f6399a859583db75106dce52efb8b0c4d1e6824cf11b13f6b82cce7256d444801484365b00c3076e1f7d0b913616c5db904f66ecfebac4211
dfe3111e1d1826e3f2fa44e3607b839c14ed218810587b6dd483fdbb3395452eb6243acc612b2bf43289ce69e86c650cd5e5a0f96a265c2617b2d2d6ec2759dc4ae6e32c94978932671c1e0d72aaeae835c447912f66a39925da78528b43d567f9ba003bd952e2de86df8660274919c4c1f2ea9c2967d30d8326a838df881d
35adbe41ac3b1680c0fde52c3f1c1e2d6d568f7822baeeb16e1f2b959dc637e0194e7dfb1cacf3018b39d0d2c5e954a58cfd002cdbf390d1bf281df3eaba5fd82b542d6faaf3664a89523a5d0e95d7fdf91a1999822094b0666a6e91be0eb2236a85e6ec4dc8cb561984eeb99e52ad0dafcad0acfccbfd62af62150c749438
8a77e8ef10a09c5c88c511e5e3d25d0f54e53f100c87810f3a9d50bc6a04368e024c896e2ab00ef625c5754801705b9c8abd0e1d2dbe0d5de2e9c3c2281781ce2f2c917f424ed45168e81e639491e952cd670226059fa5e248f9ba9d8d683d9cb975fc09d8a50c89aa00ea7755eac81a11320cf74eae634cf3866dd1b3673c
9a58c91e9e8b94581f7628d2ae0f97485b590b5f3ebd7c268044ba7f8f9b07fe50989081f1ac50e6ba5d02577601bfea699ac59432de6e125001de032169ddbb10854b0f90f55d3b3a85e461c7944c5ffa1a3250f71f3c535cc142cd16c4fc8c9c1de0761f87cb840136719e63b342011d02486b75bf81997f9e7849bebfa8
71370b7414491cc16f38d5d4eaedc34047d3ee80256aea589585f063d056eb62a6849eb56b488d0d646dc22bed4d316bafb5428d5049bf5400a7a1b69c463a80ee16906eff9beabc7bae61a7edcffdaf1a57fe269155f7a7113bdb3cf70a5c8c8509d8bd1e3c5126ed4e1a4853a25939b01a03673a4275571e6db4dfff36ca
6ea232bff15e576bf012b5a946a81e48bbff414a94db7968a1f0d4bf163873c842cfaaf83554775fbd7428d8286d97fc546e899c88a16bbcd93bcb5b78939539b0cafc14b68344e42c70c182804bc63fb0eb6ef54bb5f316d45155e20beaa7fd4684ce238004cdb5d23adc7c2e618667e88fee3c5d7a1fa67deb9fd654ef75
479056d32a7bddefc6332b1d430b862cbb02757ab5d9eb079e053d509eff800232c195e8e3518cf9e2dd4102f59fa55b2686b0d7d39adf9ac37f55bf9882184293c3a216730d26426986ce6633ec5fa6820fb8243dc46fae0deda0580864045aebc5b25a3747c43bb9d8f7374e4ff01593985121efcdc51dad1fad55f8a750
93859cc5b08f83dfd3bb4990011db4712420c2d941dee159227656e5e54ef1d33320554ab70ec8b70f73ff31f84f50ae38fcfbf4a7957290d21d5232a3e230ca7453125cf6f799ab62312a12ed8444e837a854374b33d43904f5cb9f4163d716fcd8fc025200d4388fcc4075b166273ece9bd55699bfbf1dfb9afb47a17797
75e6ed5648874afac0f5199bb65472bbc0492863a4d2df2b9d7b0c91ad8509382f6eb68b236b8127acf3c37b3b3e2119bfb5766591e152d794b3ebd3f295989836ee729141047139efbc409fc46aaecf32bda5692dd28664b0636f89be326b72b1a79dcec126fafea7150b99df8d57006cc11d29982fb55dd7ce5972da22f8
baff4c43f94f0e4616a2929e3849c8425ae6dc950a626d6137da8985f4692f61b5c37a0640b09e841db4f86ac7fd66d5af3a95259125bae1999d9fa5fb21eeac7926a7f6fc9940b19b0f81c8a94e26e8677decc980c4b7f28016a31153b745eec51a8661266d37a09f9c64255649e64090856cdac677a66647a9ebf427dd1d
222c8150a86b8f7d12ec27b5a119ba6ffc942b0f34623875d640e79535ba6fdc5f9e936549e949ab53323ea863afdff2911a91d1bde89ee15da1a752738a7744e9aba6ecf3ac402fecb52e2851eb82bacbb125c2dfa5f2797ed1b15aa6f5bcbc2686c7c7ee3376b9d7645399cd2fa28a4c7b6d68c043b8241e55a75bd99a23
2109044ebe7796199b97309d62c6b677d78d98e982adde52016d1dd3f232d57f0cf66325dbf2f338a27530d01ddb87865a792c827d7ea48b07f7d35a00a236c87f97ec486f7c1b518969d7498009f8a6ac1dcf052c167697aecbc1e35758694df075f85e5d07a08c2a0c3b0785dd39b31faf36b7902eb150d1b4c0f13af878
605995bddc766dbb1776381eebec65924a450b3965110753df533d38a414c1af4e58825cd6bdb803c4dcb49617811fd9274d0ca8b3a10efc1635fa81b8d4ce892f321d7e5eacf5f26e7c07fe8ff9daf3cc7c33e1df1c3f795bd427a977f5bbe6ae6e001852922ff4a30098c38aa7b9b9b0fc5862dbfeae46295a8da3eebd0f
0c372039bdec907bf3407146b485469fa08fc11c2619360cad71d6dede0f8b49fc7bf3fc6a158252a228ce6930cdfc0fc07d18dc4cdc4cfdc7854bac54e0c2949fe16f2736e9005538bdaad95ff396d3969b6d5a2ad0c99ee9a4a6eb5f548e659a766f69b6395852719629cc135a01c30f55002efcff8091a2477f752c3365
771790d5b7ef5a9bdb5c88096f497563166a3969190db41181098e8dde06b54cbc40842aa08a6947071a49c3d02f4655d49b4fb3a3f164858c15cf813f800c0def66135e1d15edd4314f75949db00b28bcb41428a3e1a58e8edefee9d21774c336323bea90826e7bf07fc0478e5f4a6500660b95379474543ff2d482a68276
f38710ee5407ccc3aaa27d21c28ed3f60879e14723060ac34e91568de52d8f34baf046f2bea349471fd3eaa6cd12e377e37bb7fc103058169df4f595f3ca6b15e343f59437770ccc36ec393debf2defb3ac1846eeb9532e862e0acd98b36605bc535b88a5e5e3b6b6e86f95b8ba093c68bab5fe5588f1c3edfc51e55b512e4
a3f1a61b4cb72ae51494802cabbcdc1fcbee06ee21b64c35045d9fed344fa9facc0a539b5148d7dd255771c76f4892f1a398811404730e7dea2717760943c78ab7975a422507b7e2bcbf2de6bd7756d098942a1e4bf2185f74af7febf2e29062f05deb585f0ef1d57bd10a5eef0e56ff2804ede0576269ce93ad23d2c501e0
4e5644847a026dce845c5f38ec0c155b67bb0df4e672706d08b35c8578485809c06526464e1d7575394386c2b77583fd56851ddf67e0ffafba970256907d069bc545863e2e847e9a52ba27fa0c60838b92b11883363d8aa8bdd4be8edef5f1c074d4a6fb068101805b4318a586a9409664a48a49639d1bb19083e77931ff92
bd724a761b5300ba8332b8412248296f3b89045603988c1162fc0d917f614c6ef84112554f8bae7ae6dc9dc73193c0dfe72d77040c1e632686eb8d87071f3bdb3d2c72c97ef1e8874e657bc36f9ac3551ea37a56827bdc66809d5fcee7cf651e4e65ec1889723f803adb69930eb509d788003c63fb158c764db263778f7152
3ce577e8ae531258b5a33886624205fed4f56e3ef9d3c994298edcd2d59a3633aa63f831e99ee4e20dc4735eb17aeae03e31cf9b35ccb512035bbde359a1d123752fad616a095e2fb1a246755c699e073fd33a77d1e391a765639eacb04a27ec5e70523a296c6f9127aab3b380aaee76af3c9c8ca147a00b860fd235839ebf
cb9105dacd64668f62247562457053617ec79486ed91fad906f38147f988b84caedeb9c6acbd6575ce2971053b79bec5c7ddc1c0a05e1e42e6ec0e4dbd180cc00e6b6aa8c458a2fb0787542c674580cf4a70b88f30af08005eb3d4ebebefc88e4af65b3cd9fbf680d770b79e150eebd0a41941e3f01535dee3e8244e4a50a0
0b993973be46564bb69f73c229b60e72aa023826515083bb65a70dfbc8f246320c97a9bcf123765499d116ef7281eeacdd55ff71f0831be417925d9656b545d8e56de71b656342f1b3100e9099dfb4394ee7235e9246e81ed09558555ffae7f7a2cc47ecf963e9ad959d2e2c95bcb4c5bebcf3018d505f697cec50acd2cf6c
b43e7b60314d35a2c14b025d66b8a68b1de9ec53f72a00ac8e7010dce365eb9bf8705c92f4f8fddf91d56c4bffbf8f342679bc3059df5df6e919e3443f3597f60189c1f9b1a47cf4266b48f6d8b0cbccf9347682ef3d85651b235b2cbff0db7153bfbc2cf59094c5e682a83cac5d58cab9e2f4e9d30c5bd8c92d5f874131b5
1d273a3b6f57c210291bf0294f0f2016b80871381ae47ec95d63bdb757b28a14e3cc9431747879791ab83e7ee5ecd0d226f7b5f42079633b42f31d007ea2fe4728f353530434eae7f5f03f1ea03ff081768a4dfe815783d44a9662322f0fbf2e21b6ab07c6af457848d49e37783bcf4d4ee852d603eb60cf8b520f5f32deaf
8934badd620d40fc52fe047275fc4468571c084f5910e1f5f88b1e1d50d03f7b13b2579a046c0b0d6f03544a81ef4559e15c740854e95fbc1bcf1e6d2696f12f6b7146c82f77e9ae591c9b9252cefa2d6d534cae5e16621698f441e0463e70705b982fffb7fc23d39469a3b213c3479f5f9263f68c36af3c58fba33bb1c0d9
d2c59e3037c787dc2210548ee9749a42af9d34b470f53eca9f4d614b87df34d5bf4cd5e88c19815d7049c12b2c8a1ac3d6d82503218aa54b71550602ddc6aac54c7558c79650d2a15cad3ebc6a2f9d6288f8b63bb3ae1c83c9f24f8a50b15181ea9fd71fd34bb21c11e668c0ac538bf610156268a779f1a750c6d962788900
504d6a88f8d1457c3d23dff4b7c7dc4ffd29b1ad888377539f41bba722fb39427e94a1a53c1c50d63bde4740097cc6f835226dbb52af3f82bc614d2ab4febbf8b138609e8bb957446d75d5cc9132fbcb193172bf20fdf15bd0276dfb957dcdcd495a9ea845122ad8416372632ea58ee4c98c61ee314873a9cbf6a90a6d9fd3
f0b3d951e7818ca95888142b926b49fe6fe30cd86c176155ef7e078259a8b765b9cb9858ba7af634cd66e5a7194468ef8b9bd22de3e83855760fa9d73d29bfae16352cbe2bf4546d0aa5a303d9b621a637d380b556f7d8b671675626f35a4d814ddc8d636cd80ec82d0587b70923b9cd0be206d6498de7ede78a407f66379f
c5a1a21ffcc003671d2966f6d88329e2641be547e9f86d36eae5da176532792f2e78733262956950b59025d82550b217e68a7ca0904708495e1f1a8500b85afb12fdb3441e282ff674b11f10b9d95937f6a5216af24c21bb9e3ead9d36910092c9db7c11be221331da36c6435406e6f579945a5a11ae59c67460b17d197e49
c70ac5f20eb8225e50de3b9327c04c94c4a1b0bca1913429df6740d7193a24232289a807d815f1530442f7cf7975c848354128b85ee05b4cdb538268649adb30af9105e58e98bddd4047a3e39032ee1749828ff1811691ae5e83aaa0ee912927dbfcd857366ce53647e67ccd7e6db5a8f02664be0500a8d04072f8e125c615
81dfa16c04fd17bfe43a40042d8fa7d63da86c60302c17a51c7d4585f3f54abe6aee02bf03f8d1b9edc1a3e07f4d1101d6464dbc099b09837e6eefd90a52e36678dfce40f58feabbbd9e5e71747abd6bd9dff1de4a31e1ca6d3768285db207a0e61c635f5bc404ebb89d19c01afa54bee15049035b40d2aabfd9c6e942cd06
559507ecbf5bbfff1a9ab8171f0991f434fc4dcd20b6ca6ebf1cfa6fce43ad5f51b30aa67b88986f3090c636fda5c7555a25f4f30a18c7d310dba00a34fa6dee95e17b97687dce089f929df1e7ed3581c38ad304df967148291783f91904085b4707d56f761a6518c5c7312e55aa34b874e792d8950ac99c760aa08d601724
b1522fe0c72980b05986affd302f757b37e0a176c05b356e8ce0881584595a5710146bf39a92d43ee8f1774e795cadb6823a70e090609f40a6afd3b3c41699b36f0717154b6d90878547ecf0223a17e250fb729d43cd48f0d57b05f6206e618357589c26259e6da00804d9e1d931010bb59b7ecf9337592b79d9a41b21fb85
92659d537e1a38f9b0716b8a53d9a7b7c8591db7e2bc85b47a3fb704d27fe6f369c34c363737332f48d0b3442bbb27dd083799b791145dbdf33490ffd9251ecaa1239ce5376e7d7faf69cc6091685fb4576649cf27743e25e451df78b850e6066d727b015ef813a685e49b0749dea9e07c506ef37a6139500550cd52967d0c
179dc78da3c5e06bc884d93e21d3c7da599f78b779a9ed1a87673216ee02165aa4a0cd8ff637d229a96177affc8b39b73bdd04f953fe354bf97da3edcf922ae8c99fff0b535e79722ed84e1970834834d0f81952fdc90f308402e514e25b67a5bd7d8f89e41a1d2b5e6d50517f98bd2b6051609d21fedced4667a11b331264
8f2d369939775a283118249f3ac136114642b0a3003738570d9e6d820e84b32f41aa07bb689e3a2e9b8b71f5f16e7ff5bfe5d7cef61af8d4e1f66ac8fd4ebb15b81667a6777fd2c65911970f47547eca714e07379c0eebc77f902cf1d7a8fb26d918281f9ffda2e9f3fcf13c4692b856b653fb96d8db4cb0520ab224f650f6
b54df1bf2361a7008d2f9b398426458fc7d554b21cc49a21b679b6814784698bb5c9002a093910389839620bc24c57dccdd8e5673d05c5a9cd91c15690b8b6d0a4ad689ebb091bf16a19a1198a710843b85548e601315ff75737a353dcd3578ea91a9165d9310175a769ea6bf1188f044586a4751340aeb95774eddbfb9271
5cd1e13ac0c25ba33e81834d25b4eba8766364ca2c02d757e2eb93830c57f24fd15aeac44d5e4e01e99ca27eef2883a952f5c52bed754012b3ec587d4db775e6444370ca98376418827a19aae7d113cab6689da95a0e4447bb3496510cec640083bc7884c08750bdadd254e6910ec02fdb3ddf07f0fc8e61e227030c9dd6be
c917684bd7f20cf8dcf79ee2c84c4d3affd15559e9e7adc2f3363fdc9840d01ea65dc2c7a1a677a21f723df4d2b63dd8cb1badf58f63c1dd590fab21a0107babe7c06270e247353615b4fb8cbae6f6f4d68d29b8e8ea5eaf6cd0283563bc5da66df1cce125a62f02848cf6fe379f33d11250b30f4ae202abba92519b91b223
851bb68fa5363aa745f76ec3bae67661d21c604014f10db45049781c2f1fcaa906910b973c938c2c799876613444a0264a5f3309288a47b1f2df72e90f519860d78b1c7a021b63936ccb9723ae4172c10264861c2e3e842663fe623457143375cbfd670739f2f01f4e9332e139a78e65036e414e9a0856027b14fa015c3029
14cd58d042240dfc711759fffc0f7e0af71294012247a3f827e494a4ade47cf78de8561158a3318ae38753cd6ecf82777ed916949684f63d0c7d56fb3d5fa891cae1cc2417fbe734954b52d7b1baa1510c943997ca78c8e5bba26a5e6c2ecd5e204647377991f2bad8234cf28f71c30e8b0cb51354b4461a99737cf4122988
25ff9706b1865a997456e22cdc981136d641207d56b7ab203f15a2b48fc6ad499ce3529ff67319b64fc87d5e1ed9ea7f359d0446fb34da085b3fce1749c56498ac103019cf7e06ce15aaf9e9833047a8d06a0b9792a821ea0e6bf23f4cd71072795d9fa50bd3a343f1a01fcf313741ff1ce9e485561a124b60979207d83abc
64e33258b8a4499d1fb2e9fe64cc9d451ea5c9883dbb90d62e1d37c5cdd3fb5c7f3769a3beaa44e81540b4223835ec1513e40f6bca362d8e370766c2c09b3f65bc908b2242a83b532a42d5e2be1b88b1bdf2f2ebba0c6c00b041ece7c628b424b4129e3c7ecf1686fe7df96e8069eba24806d225b487057ca45c51ed184542
157e396ee15896d3218715bff7a7d3c6b7225281fe0731799f85930c52eca4ff4d52033398143df84ac8dbdda872379074d34bdd818043485c97005ef1291e36d6cc0a0247e03e7ea59397ede235f9e5a667661ce2f89391a68937d18dd1248b81c45e4427433d1cef0500636b83c8a82becb3d62a9d750742a91817039387
3cb3a317188a7d875a0ac68b1e3dceedf2c24f34a73b4f8ec0a593414e740aa05f92260fe3936eb0bcf95d2c20b8d186f2740d8d80084b43130483cdfd5e1fd72fff02ade4021e7044fc567ac7484ae84be004137ad4370f68b7015a115c4c74638b147384115429045904b90dce5e0e1126eead8a7e3aa07e88686fa61ff3
46303a9cf00cc7ed566cd9eb55587bca1363faa6d936aec23fb900df32b485943775df0d3dacd78abce4336b85a6a6d3c34a2dfe82c98eebd8cfa48683417b87d87fc6cb7490da544c002eb61d5f8c9394f64a39c33b6fc32c5c68d533569654c3aa7750b76e42dbb58e9315577c1af2eb97b04a060b953f4274d59e2269ff
fa486d3fe9fe292e767f2c32c35b69d62e6905ba4511cc4997865d372006d2f47b13e1d00ae9e21881c5c35ac7744ff4b6155f44f683e15ce7e94aa45ed01c0d93fef9b413a3686ba410dd1997a13a8b6acb56f98501be1250743e102936cd53f0b0ca4aac60c8e45b396377cc1ae9d429787a2bb4e58946cd27c44676f7be
c6712ca15771851a335bd1907454f1aa48fcb9e144dc108d25a2a0a29da3b6889dc243e58cf4f0effea3bfd9390e9ef435ca0bde273117c7067a4e3139e0bb8a7a42398383e82a9158668d8ae9b0f853d403388533688ede1d4e39323095b62193fee792fba05595f89d5e885fa854421430486d068efd99a3019f903b631f
ac37f5939b9cc09e9fb55e8770248a8e171a4927c55c0550c954bf29fdcfe104a4d8c5f4b8cee2c181208492b54a7b8e9d9c1851077ce831a3809c34db39ffaa95e7f268a7d1d8b00a3655a9d8bd0795b6efbd2673e5ffab8bd809cff4ab0cea8a46bd6d378a4d678ad8195dff91bff775dcec4907e115381056342ba78e1f
5ba0b768349e2af84b9df227085f0b0976dedb08cf3fd45c54af2b7fee33eb56e4170c7485ffe29b05b08ff1f5a502c86fe044e05ab61522ecccadbdda74d2e9577b9384f41c933756e6789305929756e8523c13ffdfcc6553718357506f1cb5e0bfa99b95e4afdf622ba483391d96e9ff449b297613b5be941b6e2e10bc00
7ce716000a5f0b848fc8d0da6b3c3943eb1577aed337d6c1bc090ea7af28b703123b338db4ae1bc9ca0c49029bee08ce3f2ab94e225fba22ce399bc15e8951e3c889ac4a77486466fa1e109035e5eb9c0b478d705011653cd7619bb47cd2319ee29a82a4e624d1f95e09c134d78e1d9a2a267653f2aace82066f27172d26bd
9247e2fdb867488d4bdd55bc354ca0ac96e1639b5de0626620aea95739fca1e6739e4c60f8db618b01235562f79aa3b11875d5e6a7edebeca38051670607f11e49fb82a7568bbb280618740dedd55a79fee1036482b326934c0a5e16a1ab4701926467b81485caf16f0a8cb9c6678ed81e8638cbfa410aefbedcd3d18c3d4d
c07eb131e6f35cfc86f9d0157a677d0c2d7e3b4abe3a59e07893817b939c734963c3e6abc86003b6383c6c5ac4f2462f87fb69bddac42c0e1f0845d24b1b909fbe03a93a4ea55c923acd4238a6aa20a384d300eb44a4e33c5867c3f82855b2621108419dcfc5845730d99c031e29d2ec3999f24564c9f7fdb687ee7f7469d2
7e8c06d3f5b99f3fba2b431e1b016f7c0777b1d7cb209374e54a1e9ebadb0fe0405335bdf6f0ab285d1b3d6bf53a9fcd2e6748e5f76ca45a49c2ab5dd68edc59cd42f38f28427b01a3a2a3df74a442be1bcf7bcba6af7b539b1d148e6c75b5c35c4d7483c1209a753c510709be09dcddfd3dedc18cb976fa5389cc960211f8
7e2dd57e86fd0158b2a0822d81f32ab0e6be3aba720ad374bfa454577b44cc8c9d96b2d5dfc95fbfb528d7e76a60486d33ff9afa2f16f7b4c09c69377adfb9863b6cb5f75f00fea2648de40dbd89e46a59d50a522e8cf5eaedb1946d4344b00430603ac426817e2b376acd0974b3c37f65230b8b5d9eb500ff8e52610b7c2f
b3097e380fe2752ec948b46b323fa0ab178f34bcdb6c471c8cefb5635564d5d7a8d9b869a56ee5e7f97d2e240d94b689204cd44ab2aa067a7a4b09e71bc475d3edce56f03356937ec1ffaa4eda180da13396859c5c85a0f71313ed8d4858ca9394d4df8d2d9b95fb2be76b8a3d08d662aaad760f2730efc2f6782a6234bec7
900b93ef744f05dc53021c01b456ab653cccd32528a76a974a24d93a67de276b0c7a6eadb306a420fb5c14db4a19671b6256e2f1239457c5b9808fcff5ac7ff494f457ee0a04788256a4f079affd0bd880ffcfc98fa12197c9fa128500ad5a416d7888297d5348cad355511b44f9a4ba1f2fda06b8f0e5e53715ca8230f740
b12c9c4ce34deea8dd6e10093dba924d182e27d87e24e85f2da026d332651afda0afc7ef42cfeafa0aac976fa04ea29eeaf4243cde03edfc0bbfb10259ca2005d1ffe7af6b4b9b9f271c805bedb30c9016e8129a013b662240de6a9b3c64305cd8fc2dfa746c5a6a836714f04ad67287b30a21d53d484d44d263ff9d697ede
9d0250ced442ae69c1af297cac6c5a67c24f5659e4ebb64af3297e481ce55a19016d510aa5bdf6fd8f27fb8002683d3d2e0c73a4caa3b9a71c35a1798034126c1760ef65c20ff02b5f971d4c843c327424fc9ed7e714439c17f339a1b7486330b3446f4ddb020714129780f88d0365509c481ca8474fe8552630ef36146556
e1f3ca751363169d50190b0db124e2230b46e42475bddd584435f0fca6aa65533841253a9ee250c378ac22f56e1eedbeaf6788f82ce806bfa2c3208da57be3eec807ffb8e86a1cdd83f95b8812c07ebb36f2fcf3641d9c3f3ad1d7c604ba85891fbd97063dcc52164488e9aaae40821bbddcb6512980d01be2a8197a67e264
dbfc76642eb69909da9c0d32a2a08de62a5fe165be73d5811d0f0172e1c3d95cd1bcf7f006b03bdb011d59f115a1b03e9e510a2be83e0c303e78085c6399f73000340810da2eed9b889c5e7f44fd479cd7a5cba4f1d1a8df20fc31d73d13f88ca5ced625e0b76d70461e39786ac20680790ea9e836c6082eff9b15b6540878
f7ba0dd194cc93818013214156ac9278fba4d25c276d413834e2c077c5ffd45f0367e6099fb76618c276daa565ff8b47d70725dd1d612733b23a244f315a96548281df0df7c1a6141713107fd777f3150d4012eec5f8dd4442f95c6788c3fcad4b1d75c6a46eab03c412d5194b4e90f9a6607a04577824f5495d359761878a
b1b0da9fb29884579f2cb4708ea65ca4601c7d8063975caa43e18f9c28f9daf31f92e2536fde729b4a620a786339f9cab5117d38e7d08d035c01a8a652880b776d64e61bc1abeffe61992da6593016aa7e8d9c42c7f126e574048a653d12a9300b0864ad905eb22a86bc81235836882b113b75d44a95b1f6ee0084172ad703
6b7c2b1a5b8d79d1854519692a15705979f3492e2ba0638f6056b134386af0443610871f3bdae7fd150d394c4315e8bbe54578e91172352541fc1bb6b7219d19cc4c17d611c9c7ac1f6f5bc7022debde0f953a235f4d3901a9d800a00cee7d2879d7b8517c0d8e77f5e03918afb64895e67ee07aa92ffb4d0fa06ef55ab615
681ae8983607c1c26aa24e2d32f9cc3cbef9a442010962f13447b5f451ccf6517bda24a53ae49e391df43eb21a55a21736074518cc79b9e67cc0f955274eeb5043beec6eb65bab1a452b28cd0eadc43b5d8f019acf3e458303dd62f4f78f3eaea23012866ca9da905a6441a09a7ccc86707fbdcaa77dee19d0d5db9643dead
e7e829e24d1095e07848b4316309a1e0e7e1004135cc5119b19fe6a739407fd6782c36b2b082f150c617dcc453ebfee07e1dfb8dc1105237405f89b41a81f461cf03dfb5d9d13db21757878642c4373b946f052f7c094ada92115c9fcc25a374f42bb1fe7830f1909b78d9abb2461f84280f2ccc6dac98a0c64862b6353e7c
e2354ef01fe572059d6ae25af308e20cd36508345411e41aace28e4fa8e02edea172dc99c7a200048a7de4dddef619fd90f4dbf7255b7fe188794e42d7cdb8eea28c0d886a1435ece7e4681adbc8aafd7c4250865c5550c06fbe2db519fa9ae8d4f455df4660c9506e60c6baebdc61bcff8e249a26c495420901e548b7d2fb
f978741c3fdb26636120b8bc93677814e55a871a428d81fc6ac23ee71edb85739a92c20a86c84d6fbfeabd86462fb3b249440ea7c0517e230d567eaea7fc73ae495843221ebf44d2ee5ace164c8d09749227d1e09669e4addb6750479ca45dab1fafaa0e961f11a0eae6fdfb8edead318a477c3b480d6e642ca3c3e2927253
6b304d374f66cfb416ff4baf24217d011a5e57638103db4a466baa95ff8aad9650931fd179c3f9c80a1b57b6a080ae49b110a5c1b4733381615a85efb8dac06b2f770572c3d1826ee972f43387694d3ab4ac73231d97ffe98f01bf83ff20aa623ce57ff5a8aa1b4203d6992761bcd10322f9bd8ed075c94ecffe6d10bb1934
05fb314a363280de060657b19a72b9e1869b97b999ceb2dee4aac63485fe96b5b550db2e98c0a1d0511e741a12becfe5d59e968f7833c1eba2ab4f0111d19025ec745dfde1d18803de29f4ca4810b0c68de3d57f174ef5b9f648b507e0e0e1fbe4121f0b7ca4116f037bad6091f9a91cc64c8ee02caad6e4634488e4288c83
f34dc8ddb91a2a1f01a49f4e48de607f8375ec953d5ee22e28c9f3aa8e4f6074254c770bcc2f6739c24d30455bc9dce6f87084af762acfc547b5e56d88f0b97a22c777baaebb6a9eb1c3d42420da473f8dc0ece39b20484125b0d62a27982f9616aa74dfb89ad704689e901d5c84f07c8951b2c4b869dba939e99cec5cdf45
3a97246c6255a8f349f07a669c66c0013b105a0f58ab84e5e014712c7d91425d61a3c15ab358686ffbff9797e020fd43fc6141298910010cae25e8fdd0d574a55f699ec3a4015d9baaeb12df1fbbab16361eb92479dd3dc22810827151eec3174c22a94c8841b94446b74c22fd1932535c7c7e1107d6e1a1bba0ea8155dc41
f6e2c725f98669de5569f33514b6528a61a534d22d7ceb6babb2f824771862299cf6369c2847f88aee2a76417bf51d81ca6a390663501b9215b4861a644efad6e15e3ce4dea623e8bd06c220f372cc7d836beb72bbda20288afce2ed884e9178fd9995e528a38c0293690054f0047c629b5dfe85baf65be877a1ef133e7bd1
1204ac206c8dbccb7d3e55113b24872f9034257cfa15fcc7ece44b821b8c74288c147c37bdf27a595e65f2037416bf9a78a245c93c4c7c8aa9444c20ef3021ad783fe5835889c5fe99c3e1856e58902655571432d49f43bccb0440498d8eb41fc07b9fcdfa44a2fcf5d3327109287f816285140c471308cc4499adc95977a8
71f8fbe0d43e3c1bd9ffea8d68695c1cb83673c7d4710829394d0e0fecd1016f1145ed219f60411cc2bdd628f72f60aaaec58187032dbb6543b3a138d45c5cdc955abb05c1fecfeed4011168a0c93fdb2d454c66a25a81fab137e70ec07787dcc132144c53a15cf0909bf10134ba9205a65545b441f1280239409d3bc95f1b
0251d408e32b36a1d5f146928dce90c91f815d3ff79bf3a6e53726122e8c2b2d30e7092fb07e1a736b51cf13fde2a940154fc9e67568c7dda81c1d49072b4987af38584dee02328ad9476876ac02a1637dbf13fa61596588f25f20c08dc982ce453cf27b40bce8ecbb9a064da740f5c75497ac7e915d0d90904fc4dd614af5
5e66151efeb466b98423ff03fe3a8472c9a6a09965a81c831ca8ed875489a729c2d54b0d496d83cd009f9cc027eb116a865020e2159909a3210c0c6f5c04a5418e53f49ad35fa915e3bf11361e1808b22ab4ad96cb70771e9894f2b2853be3af22df08168e67fddd7abddce1ee95cb7e9e2bd075ecafcc4acb6ca79aacb2de
df98ce002babddb84b832197f0e4592c0c24bc97477416885713d49c5e54bd834db02d4977d8287f1e268d765e61c41b64f8f32bd9b961c72963a226d0bcd1f412f35b140bc547de69d7cb48019b9d939d9bee291693a4b1d787b12b4d8607ecb54c1109ba0d3b2579d5a4eb71c43859e996e87f8f62f03a4fdca481e1597d
18d91245aa1102629c3a87268f2c526c5281f8d8a5f1fb4896a55232319791654bea0c5dadfa2cf56b1a9cd344d3225759f778e86c03a19fa1bb9272d99d7e4ce5254d321379f6febb97619eda6493e50a932db686e48a2c08415f1039baa1c62a46b960c078e7ee5e1a928578e491d622abd370d75aeb126e60667b8c2a4e
8f6f079742d805aaac642341612d5a4da0056770b0d241f85bcbe26946363b1d0654fae73e66dd77d19e4c616b3a5b2fff244e6de6ec051bea09444c83b691e3933bf18e606193b242e5f26a53fde3621e5ff648ed9b2e133315fa72bfe9a2145de0911d277ce0ba118f32af9b3e3981da06d88ebfd936d675d35c47f09d69
1f68bdc2b864f41cf16680a60613839d9110fa6d3cad642242577c17f64ec3ccde2f532fe397e6299d0ffc4e4c82c82ed6ac813fc8afdec88302a0fa6c6b9dbd0a5bb5fc129686e8c9d60d3c8c024bfa8a82d0b70f2cb541cf08f3205d991129f26354596f09d84b81af4d11a4311fca55782cc7ab91c43570a9f93f910878
9ed61a3ad1916d48c84241c8b939fa5749f57c13f67e46c2b1f6990deb284f22988ed3ff87f3a4893319b8a1e124b704171602db712c6531b3c7d6e573a9d8825fc78a42acfd014f87302515bcc12b98fea057c668620e4089b85c9efda576f029cce97ba5709191e2a4850235ca0a7f76e6565c375740771bc3556cf654c7
2681550517c0daaa38193efd335baadb8d74945507b1c205af82e3828c0e49636abaddf24554634b268717a20b4a0ee9153fd69243e470cb86f82e327a6b4c10576fba94a720650bec7491e6d8ab927d78eb9724c3bb0e57c2f7635064cefd39be742f14572d15eb3c071db19b21c395666303e86b74f2ba59d314e4b1a78a
f52250ae13fd9947c38322ef9eb2545a518bdd6246f3923a03133fadcb08bd3ab2f54f8f65cee6bb23b072f8637e63d075d55fd70c2013bc6c7baae4da712e71fa07ea68b32b58e832e9bc8e3f8cc1d562552fb916f35e8a47d0d8f33acfd33a93e0949a4d8087413f837a672c84b9daa42154fbad948b310559bac30aa416
348091e77490c006ffd37deab8144f53738d4005b73b532a0f9f181b6cbf8844b01f0c86bd2f4281187bb4186c2a4425d9255aaccc99cb9586a9564e11b4be5cdfe521e581b23c02319ea62ff36da19bc72ef3245fb76da03b3f570d8b86187659c05658077b53a7aa4c4b36cbe4ceccb7a45c031e8104cb489b4e2f8e434e
e0a7e5088a33b9b95c58fc59e94ffabdf1428db844cfadc0de0c70f87df940694053347db6f55e330a28dbe62ad81c4f134b0be88454ef7fde8b83a50fe0697a6ae22a2008d13126cfb25bcd52bf0f4d66ce2090fcb74227d7747a798b52aabcc30672436430cd296a861db99271792d196740bf3f40ffa32095a68f20d3e2
d6ae11e58d4492914212b71a9fd24a2c43aeaecb2e38811029681691b7d30555d7c2acef4889768d0ae02d2c640567553ad3c8370dc471091278cdb8f4fdf83441a69c885ae7c2df863a23a3c8a8ab3f324a3f6b0413790114ee923ac731335c71075bbec27c9cecb5ed78d50e4445ca13aa222fa5f3f57b1f37ea9558a93b
03c6b217bfc62c6cf642f3473352377865cd47fe599f79062bdbc5a1ce07081b0742ff5a918a3b976e303ea68e60098aba208b6932a7415d833316b42fc552643262e8dacda5cb399796ac53d321b7c1ff5b7d536025924d7912b776e33de08f747ff7d938aad9f7b9c8e222f2dfc36a9935fd9776503d3255704be2f87681
5a1800afb6e0e088a881fdcb8fa06519b31f1882c75bc12edfe8ee10a682ccccabf1b7590f64b8b2364fa2f770ef0a9a3cb22202989bc412c0f0b16ee45b059ce22568d04d191c658aa94417db08e26016ded5da8b13886981ebd6d97b8dd73b878447d1993dae50ab57eec31f5a4aa0ef531a86493372eb77951c9825409f
b74ca8b2d93f37549cec4fef92df3f6094b3480ffb4b576c8b0155530645212e265465916017323259d276a4b81ba014439bc3bbc55a2498cfdf411594503bec04237d96333ad872c29dadbc62202c17f6346af9556733a64564deaf61b24d84e657b138c37c3604c5c1da709053f7a75bddac0bc3229a00040e6d1f9ee207
465717e9f33a1b11c095efd75486665ca6e7e1e6b82c06a26586a38ad0bbd4e0f8eea6128281b39665d47325f10d28820fcc900650ee330616538cee7454f1c807574cc9cf6a55ddfc428f9e7c107af7f44f02ed3be9a1047584c927e4a9970c55094afa481b82c8c40e91fe96791699f9128e0ef9da59b1d7dd3c20cc2803
5d5571e3e5dbc0ed14e00f31dcc0d6abc1b19c48926b82a7d61cdc95d29fbbd9b81dce9c518954d1a2c6c518452b6de06e9c65ce5c90baf0493f31022493cd05041e05a7a0f8eb0bafdcb41169cbfa504255cdf2bd13cb167482fed8750189169b951e54a18ef428e9ccdfe2ed0dc7a39dc85e480a9c7f47c3de2744c2a9c0
3dc40a63c62a8aac041036e295cdb1dbdd70a47cf0ce18257a258aba254fe866590bc7ef46f7154df46a8e4117068656e7126d7053506daa3dcd7b66e53bfa99cdfb82fbe5ca1e5ec177fdaf04f25ae27142e2b040afa421474c181c7943643b0976e3805af1a3f47600a2d8912f1ff654c41f826522c07d0e35099b283a65
9fe3241cad8cdcaf551a1f31fd7eb2abb2eaa65f2a15aed783718f86f56966b0b2d21ceb722b8ac38957f38932acf9a19e4ee9a609259eb0f6b9de75c1b29d87790563e79f425091966b936a4428df2aa1c281ecb8401e3f8f3c67f6dc631634832ef74a8c94ad979439b30bc8ec1c99b1e54c99f26d09974b5d92e96be88e
ad84918267a050f2c6ff91508f6e045fc9bf267f6464c901c6b2ee48fbe4f7696d26da1fceac4a2e9d6cbb9d7ed7660b4011beb631b80f6b97297a20ee5e52719a3db2732129fd8eacec5b84d94363f4de595556494b89d26e70bc33f5da1031505674602aa5391a649c4220e1b14f2d8312e445a15276a52f1d7f45cdbcb3
c95786779a266651cfba24926fcb2b44b5116273e67aa1c6ed0b4ce53a946e74d4c291ebf7e9d1c1ab84b09126b081978c2b0fb3feda78703cdca556f178febdf0153c6615cabf44ec1400ff8c02370c9ed1086e7b4cebafc2acce977568b8e3ab6c334e55b850e5e35262e9ac4eb201bcc21bafa2e342ae824b79c9728527
315e32a7ebf413af7aaf2d87c73d97f100b06a940a98816ec4c26fd451673caf4abd2dbace36898a853ba4c3acfcc14042676e65d69979aa1543d0965578c64ecfd194ce21fc8314fef29e35d5597a539d4bd67b077e880ebc4d41b072b8462dc63584bb256094eb353e355b346d6313fb265b8f713015642d61c843b1358b
fcfebe5a86307bae9b574c71371509fd56ace646d61e0a328a707e3cee1c3e3e9c40c42ac453ef5b692a1c2f24626d0cf130c3a819c54d798dc577ff7956bf27f2b6110af08f0301f44008739ecad974aaa7d68e6883dc7ca3ca0b95ba226d819904cbf79b11ff35831c7258bc605c97582aeccbd2a5e64d6ede5f4d5445d6
e83641b35ddc7cc6778e3ac7eef59b688a3d247306caec81765246ed6106b3ca3feb27e066de66b65e792548a57d9aa20e60f6a6f0de006845f8d75252ed9122728971f33120b49265cbdd1d8b0f42f3e673d99915684038c49e5ce0eda876c2f8f1ded27b035263256f986ad7aa8020f24e25731884e026c4e4c93b385a4f
ec7fb1fde9e7dcc5ad30bd18c739bf39f72ec5b2c36a98575bec2105560c733d7e074e0289cfe0b374bd89bc94e3110ec7fa6d117c012319870bbb612ec2c75a838a07a7cf229140d5ad195aec2cd0c980955953bb8009348a5b4c700b123b00156f57257c1d06a7d5d175167aef7095e63dd7da9dfa591dca1c59db066ad3
dd36d2e1162acef1c20cea01052c010e89276c8ddfac9ad719214eb3aea6089edd5b66193a5efbb6eb71ab1d2ff19f1931bcf5f2aa54b7f40da7114b49fff966de7f5b972aa76d02e31aa6d6b36b61157d0150e89d4d4c116ba19bf10bb33e2ef1fbd14009cae33d03248507083dccdf90d4e3dafba0b5b480f74b8fe3a71e
4020707a940b3053bdc7a8db04706dd04029f9180564a829480dfb462619f48bf91b55567896a8dce27e4d324c8e2b4e669cf659c16c0f6b82dc72823d0a4b7e992a8f80ad0386473fc407dfda4e7f18d614369631e8d241aaa48dca013c4368ae87faa94a6fbc4a7e425a53bda770bbce6b524c07a517e9367f611857f6d2
5dc35589ae182d098797f9312ea7874f03c5d19746425aebb87d803182d98a8b43528131aa077596d4e37e091567165cec8192466d21d21c97dca1daa89285afa44fbfec5c8c369e3f6eb4e7538a831964e68e7dd069d4816337a07a5983c954e48a09e8638b060040614e1b9d7f745c74a1b50973e831916789c540af9fc2
55cf152aa8ab85ce2d47502abdc31f3d2efe0ef16a7593a8bf5facaf83cc8dd8f7bb53e73a869e114a352393d3ff15846f1203442ddb1189903b3a0d772de82728cb3dd36cb06a5a7feec342105c3fcae9acb6c39ad706772835370df24e865e52f504701ef0a739952d2704e3e1f3c7e74091c3b3fd4a7330ea94744d4f1e
1aecdf1e733ec1e4efa24ee73121f6b4ee0df14ac0f859e56fca07db9b41e79e9d144c7df44970f0137795e8d5c80fa2e3978bdbdaafe4b4c71973d6e20a60e8211529bb5b96286d8065b65d4ca9124fad2a4b935863b3f886edbd9bf7a57cebd03a3358cd90cf5cb91babfd8757565e9680cb800869674e4c356ce76fa50c
aaa6e0dd75a61aed50acc2373609972d065263dfc6b9326c41b967b61e78b8d3442e8d30c50155aa7ca9cd1cb9247f306206ca691b0d5b1b8fdae901fd66a04eb6ceea6b8495f5061e0efbc0017e95623e196b88ebb9b74cb283f006cdd5f6e7687c6cacf1223f09658b2a1b0e1430beee0cd6936a93dc037dbbefdfb2cc1a
2c84036ef6b567d8926e6b524586143a6689266ac7c00cc11830a8d1a2bc3ca74356863bdb535398037b77b82472cdc5e0c4bc80bcedee7fe043aaf1e5ea75615c46dd2a5ca22d3e032f7c0b33523a2d5613f3eba692d641b0a0a33b5cab39cf4ccd8fe72bb4ab6ca71cabb4e13625231f81857ce493fabadb25280f209f75
f1adb15ce277f7cf3e0ccb79293c3871cf1fb2b516a2f87a84bf8aecdf84cae2582076a2af591c19cd604bb2b56e65371bd062db57035de806bc6e864e27d7a27c72e175b9122cc656e8b71bacc85d8e20bba92322a50063ef7f91fb05597a8221ed0d542e42d58d6f8e50de5377ff027da0127bc9661a2ae255fe1a844063
29d44a50c68a0903f4669c4324af974a97de6b60365f992de322fb446da39ea54e3e33660d0ce7f0b31504109f954f11eeb823bb4eb4d893b8c1190a1c9fb9dd71c3f0302dfe9ba1305e52f67afa320459ed0b6f870d7585d53790261dc14e26c26791bd9c99740158cc333c36f4230d12737e8c8a688ef66a51f80962dc0b
5492e2443ac24ba132954aacaedeebd9cc62bff8f8e5e08c14187629f13b6a94568e5d4f2b55463c70f863b407cebafae6ac9566ec05d48ffaddb7a567d5a2816634d1c5f79280de20d78387e23db4303144454e3a437015747b048a170c497e8433dc28361e610e5a2b503cb51f5dbc63a292f16fc267fdedd7925c58d314
dd6705cfa8f1612defe39682c12d47ef0c3d9b5ec686ffa4fbd04742974cb6a9483b5e03cad1f0d140aad97d74e456c75e6642151d167c1a822dcfe56c247e0af1af264aecbc735e218f42d9f817cc1a5394bea937965f7afb1313ad55e1f317c53b535882120a2230d00dade248ae0f7981031bea25dbb72dbe2e8547ee40
02a0c251387c68ecc120adad0f0748e19edc9dbf3a4566ae5e2f38c74f6b731a4a97600534c29aa689e4551421aa5ca24d32abdf485a12df2701fbd1745230271757cea59b63de1ab59113bb574ad553d98955e41c6df5c7e91636eace1e5a0603e10253fcdaaf8ccb8a2e28eeb2ca9c7231f5d1e420110bbb7ac464e131c1
78312efe0a67b81bd80c4d428286eb9a149cd7b9909ff160b057d9ea89528a00206f5228a3dd8581ace94ca99fedbd7b21154e0e7509dcc0e107c0fe2f45b0fefd1ddf56ae11d7f17713c989095a5c046745f4d801f19fe0e248635f8c57b5028096e7f12f5b2f28c38f8d8403828b7cfc9c9da1c8ddc94b99688a050afd26
58870b4fa3dd87eb75fc0f38cb2fc2b949042f1008d1cd2887d9977663064865c6df078abcf76b0faa79aa3657acc916cee0668ba5888f6d497c318a1aa53849eeb939c3696e1b18224b789dbd87495f007bc11b86db8e9bdc4249e1f7c9c40a0de26a580d28aedbda4313fa07b53cdae3d5abe5e580c79c1ed42736dfb824
660a10eb0e9412339624b21bba4ef66196dfcd89bd539fc6e9a660a05b3c73a315fc48f8d68d7de440d8c7a1c8bccc4e09657445b3f5dc43b52763b21354fef400f9bbc0d1bba85802e4ed2baa3d11aead44ddc825c755ac4ccb6a1f1a6f65365f609f5cb3fe0ab0ec9b0428f8aeafed197d05874a80b87e3b0afcdd7bba62
2c4c416c110f8627ea81643efe6181686ae0b70f80cdc5a1cdad97ece8f77b87d52ad6cbee78642fa2c9a6504f2a17cd6861b050a90fde964831d4c43af525bb043d7e78af1deb2fdd442c43cebe9e91c04420b2029dc4541662999e750574d4fd387c88306fb654def8a3eb995729d20e1b730e61f697d5ffa998714251c8
18f5c0aebc7c45475163a859d9541c2282d9ffa97a310cae7fe9b35e635a8a7df366040b480fd578e21f7b2b5d1088b8487c34c028ef3baaba0cdd7c1e7e694b17c5f25b29a2de9d8f29220c9ac477fe369838b3537bb49b1fe9ad1549580bf7799bfb709eada7c3c8614207c28c9c654420c1b16d7f0bd461f61ccfd93402
4c3033fbb6b3dc15f9956f6bac3ab1dc43c7785d42a084d3ea583258ef531202056ee73cc09f137994322bb00085e97fc204224c96b0f5843a171326901e49a94a4e46d00364f177adcc2ea9e5b4760b6ceaa0849a7cb2c232b91f4ef3898ae87a796f62f1a96e31188d12ba2c21089e227594fa35b40bcbb1570321e1657d
a8abef8e1ac37cbacf67d719f1605af599dbf37b7d083f45a80063fb9f8ba01ce9a63ef25413ba5fb0454131b586aae594edbefef70242552762989968614b1b50cf8339166dc97ca1fd7e4382c53fab164c0e469ec39704d6dc6f49d18463e944438eda86183311e340062ef76bbc0fde1905f5fc0968e17292ff4d1efcad
1f1d12d5986ed3812214ca855370c635c39edbc0761aeab87f4651a8a28b0965fd5da6d2d45a2e5a517377cc80d81527912f9f4c163d05c1239a3d4389a78b6047f34e2011fa62d61433bc3c5c6b7dc5aaa5c7b3156d396975b372f51ce56ad05a3c55f24a22712eb86aeaf45c1bb268398b3e790869da81cb0017909eb08b
7274550445adb6439ce0898acf8928e681ac0f7a7f94a52ced2ab6f43d526f399a5b3b911d7cd38a66b65bdebaaa16d82de09a532665d8d17b1a1a33c33017e68b4f0dc14d5b7740e634e62212205071ded125590c91a34e81843970b0c444e9adb434e09a20d005b6605087d2a87277dc0e94d319f088748f51525141a681
b129e5aaef51c21af8dbc19cdd19aced661ed7a6c7b9821d9eb4742036d2e69223bde8bf108a1aaebf3eb87d689effeb55dfc86c1bd3a68cf998aaabfc85b54cf4cb78cb673f9bef76034ce010a2b4e845b056ed1aa51354e65ea1321f60ba829b4e9426c2101bf0015f3b85b31d0255d4d6fc2d054b6b4e6bbebb89a25bc9
c510318116ea5e1b8710b42761a18d283eb1a5ab154b034ff30d2b829f552653fa000aead47603a4740e90a54b13734e94dbb6a030823d29c1e68a75c3f361cf9efab4691d65cb4ca6382826e1db005ea774c3ac9b85256d626a7bd1fe8612726b07dc7ceab780192aff9a436d7324952dfc994bd670b2f271d142fc84c8d6
52efa5353518a52817c019ac2cbd31111bb7e560dfea2e81a2e55cc1110278204761073fb0a40bfc89ec3cd9d34b5d59affbc6930b09b8226ffce9a8a93fe28c5ce2bc536953a91b2bf6195460c8677f2bf314a16a7b4311f969ad289ed2c65177193db462719db6680e1cc03c2c3154e60dbdf7db0e270b0154bcace82bbb
2616f8a418d898da0ae875514b7c4327c66c0b6826515f29b972eb52e220429d27e16b9b5ceabe45aff2ef9f645f196886cb989687e951f608e738f1ea6cf2a79e507be7f080485c3668af2c8c3cb8a9d4e0ca896c5ae8a19702d64c71bc4c89a414576b07ae2e38d6a655de7d336b2b1927a156e0850e6594bde58480a07c
0f3c026467cf9b96b873c8bb203002e2b69ba3445fd368780c425360ba831766a37ea41c03f69454823b46e55170aa82c194be95cd4f6f32fd93f3701c5cd730038e8ea9b6a1e563bccb223e9d86751123671c0b92f7fac56d296bf09f5eeef39c32dedd67034fb718034ad4ee1252a80529e5e119b48d5a1dca82e04fa906
d3fe0eec976ba1ecec8992d0c2f9594d790da7b52d71687c3a15c4a325594207bf603e2dc80cf93f71958724ccbc53b3b514b1108d6fe912ad5531dd8a294ba705b1ad011d35cd6a0e80b7d8b345e0795498295b18a622708751e8f961104e7871c5e78f0011d936e6e86dcb8ba738be88c899b81df3feca87c2bec0282e26
242f22fc596b83be010e8799eab36e37674a2d25f507c734801be5fd0166c3605206e5038b95ec649de2cd85e970935cf3822fae2b92de3d88343c9a03e0a775f2760a422e468b7b6e0714a2eea42a675d18eaf42fedd9544742a9f8cc4a9eaf3d77629ef815904799cc0917badc507cb247b808e543524d903c2437050f2f
8d5dae66f994a88e334398d5fd17dd9f9c50f6002b0e52ad911532b9022fb3a83de7359b9b57457fbe91471e2e31685e7bd8ab907cbf527200efd0d55b7745b9feabadbbd037c8e05f5d38196d3abfce6dc605c9f8e9543c9b364af5f0bb4146cfa84af9ea4906515a37d9aecff4305d7fa0d4c82440a01a5eb66abe43cbbd
6ea131c43a16cd0433c39abacee00a58638872d90a349dadc0debc1f64ce060f05956b989b084ea5c42fc7933ccfdce2d538c45df01ddc4d025f450994168f7b00bbcf5fbaa45c396c84e67db0463c0422d830ccddd69fac0434eb4f6f6db9a4fcbe063ca705f3d2ac8b38ab65fb32789313db034852f172f9ee3bbfe0a4ec
ff0275b06bf586fea2fc5bbcea05f0777aa8306e5cb7eaf97547430a79c8a74185abc137c7e30cec2f61ffca8c38bd34a20dee0388ef6dfd2d68612c37fe50a3fadbfd1efb17b04ecd5173b37a85ccd63e6e6bc83acdde36b27e8827a54badf3822d9eed4afa49839ee1a49828f9e7d945b4545a85178febab85903940fc65
8bf53669e12735d351a2858c5be4270ef9cfb187161278216e2eb359a0f01ce0326b6152c56f44600e3152c07f00ce0b766ca8192c6e2cef6a9bfba1a6b042de3ee0f793da682d07628baf6f60961336bb4f09e7ae7fb5a37064bfa5e2d9390f78d7976575b82e27510219a0f3a7e0ef06536255b9e9a545f8c6ba2f746426
d6f7f0d43b84abb4a0ecf66edbdef6724bb060bcbcc13124a1dd801768fcacdd51f7d13ac3cf5ebc3965127f4772ae3c296fc955da79143d65290d99d2b8204d5227ade3cde4a2e523c88b93eb089707226777565c7bf63b5cfe1fa261ba54d692f3a9bb4a10e08e6335bc73fe3a4abef58baba568da69911064bc5790251a
618638c4906151100d57e5dd8f05c804c29370822a95903e6feca634e70be1adbc0e0f4bb5cb68b995c0c17433bd9d039b89e202f278a829143fb7fccdb7e9ef900aaf2daec6b25e9edcb1ffefd889ebf80fc69a5e817b45bdc4f5afed089ad32256c50b0de86b1797ebc6108cf3fce226c7866e92dda1b8a1a9b225988f5c
e866118085ea4356c3a77fb3e3a9a847039aec345344af70b8fca478a3b79fe3c1ed74210789937232ebceb92e5ae683d7713dd39252ac439b969a2509fa6dd60c57c863bf06488b290a23121fd0900e6821f33bc4c41f23323c711ccce1edfa5116f569dc5fec01cd92c04818ce8a17b912bc4f62d9f72f4c0567c965d7d1
266706031d6d8b3f4b65a8ed125994275219223d5e2289c5dad045df1d912bdf7bcbd2666148f981273eed4fc85d190afec3843451d12900feeed5f42d357cbddc01579eac9fdf9adb6e212547733d3a22d2f65be27038c2c3fb5b2f51a3ea26751d0e12f64b4e6d6a8551d23080a8ff23d23e5cb0857e653a859246812efa
4dbf873f78813f4b5ebec1529768371f919c5b67c6458092590ec328be8bccdc238f103c7e166daa869758b517d9cd869820e0633beba0386b2e33965335740787530458a698a1664bedca0b586afb5482b2f580e7adfd584314144e3adc41b2b08bdff70789c06a87fd49ab7dfd4949c088464f296a8f1f69d60abf17850b
5a254dff8d52c9c4b8860b651e92a5973113f56f1c030ebd02417dc181029099007fba17e649ebcd1e1d044bdfcc279430f56e80eb54f921aea09dc18689beb9f34bf4005490373b98ed62ed66f887ea252160a6b15f91a0652288f55b704203d285ae011c79270bd5d21114334fb466ef469fde9df95a3e11914c69ba2abe
a27c2c5e43baae066c5b329dcd72cab79a214af8fdef80a2201082df01a595b21807a6a3342e8ae626c0e4598fec95553be69f8882d7378b3280665efee8e5ef126cccc2eacdb561fc84c491c227bdd2323198f73c8de2ca9068b0f8e4245da4645abb5d3fc748f70542314f06fe52befe20239e5e0eeabdeaeb0fd4299886
1463aab51c77bc0fd59900fac5ce1773e0b71ffd32410a02063a152104b211530e3692a794f794073e75d7b05dc2f78c0ad588aa76064d888b500e950d2f4553f9bf23b0c22ac95771c291140fbb45541f381999a18b0dbc0656f58493098c61007db73a88a35dced73ddc40b636becd3259ee495e8e90f76a40023e5d8c48
dc98a2ae34edfac225855620c93365bb8b10eb2f7943f1016e3099e6ea05474750ef6e6e32b2d49fb82662238f0a33a1f9260215fee59f8a7762f8b395d601e66c0627b4dde3c681e7e1323e1fc72f2a26a068f6a00c07a9862bcb41deb978c09ca94f01ab0449a159620c7987bf9501023955b27089b7f95af916c319ed37
819f4796e917101031aae8a271189cec405c5ec0195da3b965047a69f1d2df83cacd4f320a94b5abd2bb6f2c06f7292b0c43421567587f793e043fdc07231e2ed763642791842a73730e76da849297ac6f5c60ce4be1a4d64a42282cf1e049c80df994d78d488e03ba101e8520715e68a5159cf00427a7ec0d46971d881f68
256e2e9a4addf369a03252b0fdda0c05650279f72349ebbecc1431697f87df7d87d3726a4916609fb3674cfbf8bc59e2af9d855bd5f8d991e53bcbcde373df266e5998fff0064f4abacd91894f0b76e337e416ee7632e88aa7adcc56430a022f85bbd2e802339441aeadd92efd87f160a8f98368fe8b5061f5a4aaaefdfdb3
31bfd109a6d9641be4ed21eaa90561f84f9114d8187af6e0d231254fd4184efcbe11ac4ac0c4f2ef4ebee729356f6819cf9180fe32a4827c201970fa382c93363e11594980747e1323589e0f9fce87048c1c1b659c277f001bcc05525680c6778ebdc2b88658ac7f14a1866b8be9dcb50f2f6c3360b62fb95a1417db555e07
89bb6b213291e6fc13dbc15e1421e8225799cd65afbffb899e8819fba810b6129fcb43b3552cf6f42c1a836a3397d6fbca416896e97ccf3e00f8932b8a19e3245d9f8a19dff4dcd8fe9f8e068a87cae658b7cf4c613ad3e73d818ec217f3e604f0d5499e0eee62153829a6d22ef926606e87dc1a5f8c5449e3f7991bdf6b9c
a20fcde4ba519679575586ed701e777b3948b640b0c18aa62c326f0c73517dfc91ba5cc0dc1aa51256d2c9d330e822090b94012a13360ca15567ec72634f29477bf0d9f71162c9a9b138d62e17118eb12c5f7ff3ef464e6dcb0f9709dd6ef1fce7cebe59d7eeb9ecaba1dc08613a6206cb151513b55912d02dbbaeb3310bc8
ff725234dbe12ecbfe5e7680d6fbc60864ee0c07f89224326afe09b33ae142b7072715a120ddf29fdecddaa02d9616bc7962d6a0740ce050076b3461be5f12cb4a9fd2aa18a5ac8b67e9d6d13ff94ce18fce66225621c8f867bb66c741958b9e5b4c1cf7d1efbbd585284ea6e175d50c4e4cda2efe8f88aa6f004daa8e976f
37f1320c55a8679964077e3e800af1ed4333c6cb5b30301cb2812f228b1d196d3d87cf8035bdcf34d0a53ee1d3af0376143a02a762718fc97a777d6bada4877bfc0561d31af67e29ee7b81c15d676925fdca3f2d0c625b07bd4085dbde0b30610b05227d097364fdb30443cc1bc0227a76233871db622155052c294307a792
0fbec7a44784cb5dc6a4ab34a252fa948cb3e242d4bba9a821d0a04a9ef8ef1f5a40a1c623a26db245d9a4506a092b1261e647f553305e24db2358847f752e439ed4c15411c44620e78d01051db8c8d5408ebc2204f75e69ebb5d02ed0e82b0de812b31b882dad2506b6fed15be0c3f97e3b791f4e21eb9f21f873eb8045bc
e7352ec5207bc1bddf135d3f1de8d2fe86746566dbf2478faec9c41ab6d47da56798af8a67a213b9495cbbf3d0e309ec288c65ed73c16e6e8506e8067dd991bd4364a0eccaa1612f172a8d361408b8fe9313e2a4271e8f2ac9e9fccf76b71a8f445a3c362995c1b74b62abaa9408c4e7a1985754eed14d1948e7faf378fd05
750d6a616701de0b8bc6606398dd43e174ef7733723aee91bb18f4cda2e8eaecb92f5dfc4b51eab336fe9fc88609a7db57fe87ad076386a7c9e7ec95264192f004d3968779df827d365898a4090fa77584de6b0bb385397b2f3d0aadcb1b055ababba9c57b44f46d1bee53fe9b4aa7942b736a10f0cd996050f721a2c31190
9fc6e5714dbc0ef077ab022c586574087bf9e04ec2de91717e9fec8156ea0cf5a0d42c135d4f3765766018166110e0b977637644b7b5b3ead9e4daac9075d89e5e04d6b7412f287c4f232d50666973f4800dec6c0a3e7929ada06c760a0c032ba7e12016011074220c0b5a8521712e105ab165dfa64e20508aad153a5f3e66
748c2f592bd0ac23405952a6bb5f324d5d3508ee50168d3e42fd5bf68ab658818b94283e16eb124cd29f6a69a6a5f9058b93285a858d54a9e2937ceacc276a1f95ad867d159037f86acff2fb4179f2079a1d53f99cc875379478bb5fba5892eb50d5c516288f8c49735897331235eec56b25211b32b03a58ae893081ac8742
9f0139b15a23793b4d764e985f38d4f9a381e15c845742b1557e5e671697125ebc6ba21f7a141950c1ea22091a3bf12f2142c2375c57768136903a4152eb856c2aee37a20c3c51c4ba923ef61ad50f9a1352d14141faf2e2ce08e472801d0fe34576228bbf84f65bede6b126ee490f30c4641db47fb652fb05c16b8738c1eb
62ebdd7c9a31f7e92a568ab77cd097ac8dc57e97aa6327cfcc0c6792cbc6ada1087f2f0e561de05c9703048ea484338144401aff886af73af6f7133f203cee5c1fa43ea9cd751e5427784ccfa901329ff8e451f0b22669235f9b9ea9fd13ad0b1c57b554068dedda8745b6cc1bafdcdb2deea3827fbe52aa8a360e7859c5e1
899f8439431fe772ba668b3a3b1a99b57310bf0870f86d3b5d8d617ccd085fdfbb530a88d65a978e96f1b54137d4bbfbea1173253dd1d5fffa52b7fbce0882f521f17f4d4a9693c6f033588bb619a3dadfe922b97fe2047e9931447d372bd1bc802b53bdd2ab1b155da7ce01d01a47b490432cefbbe67ffed4078470c7e4dd
7ac8e76d57c5470f010c137f816da5425174cde833909dff07facb63580a034ace2d7ffc08d32c0ded750206dd0444f1f1e769474de065112b4877bfd30867ad9f3fb0d1f3e9cf2fcb25ce6990215d241e0b6d8e64a71f0b5178234afcb03373e09e7e35e71bdaf68551b2e3f900598b57ab6c61b0b1bffd256510864cb71a
4d7a2b742a78d380759bf7069b5f1ff4e34bff04b7ed7c0e023e4776d27c8d7fda75c358261031c68924835b83438e43dc7f5d357b4a719e7ee153438313c45a900e608a37d123de26b4bdaac57dc756d2de11281e723e09607255b080765755811e2040c158f7c664585666f2c87866e56ef03d74aaa183398329d3937162
651686f32cb9047a47edf42d294693ee311872c8ae8722c597673a52d3652ddab08ddf261f0c61b02e7542230a50e589518584173116ee4a3c76bc1a40df112d4eb97caaf7a650221127101328e4155780ee76be090a9fdfdaf29c0cd9ec37555f8cb4ffc61852249ba7ea3b4d251c61c7e8eae9f98866b669516c81d83a7a
391f9d8f34535db519e6e6a61ff5470203e604bd0a8e0c5778ba95875929f4f49b8d2ec26e0c8d030ec93b77e8a25b832f3373ce61a4b43491ee40edf057d4596efb3ad61cc29c1b6980b0e5039146d61934ca28b4dc8313f03dce37736b556c7107a55bd9729695e56939880ddf5004d93cbcdc9f68c95de59e38795adb2a
502fe8247259f82334ca32a2fb3dde620e303c3ead6650478dbb7f4afaab4805db2154600ec0b02fe926c9f42007ac24ced38df61f3889ae41825fb89c30e0eb5ef8b2dda787e6c75991013c5cdbcc10355e8bffeb473116c623ccdf2346afa7c739d0ad42f69ca0b7e68319c130ed981fd6c370e0d6369e6ee97e32752b86
10ae94de09bd96502c4e34e86610ccab2dc2cb527799df784d5643a6ff1aa4d3d9cd0b7798964fa330bbc3351243be6a3b1519211004acbb08f4b41ea396e485ac1de0613ab29174b61ae361c517bed30bd293e42d36853803e3c16766197024bf16d0d8dbd260ee5ba76cbae75890b66d5bb7ff72d1630f059f863c4a0f0c
207683e7eda064e6c8596759595735025ad9b3af08180bb722fa713e428fba0f98d82499cc7c747183f6ae4fb6bcf978bb7574c4a569618571e50dce8ffb78d4603295fbabbcbd02237ef2a213492a6b41ed0a7f9aad38f3825926688f7fe4426c590f5479bd22a451c342a564ab02ef8169f967d1ca87a238ddd6cfd5696c
8f97ae4870ca2d814005fa376e1376bdca52b732391c5b71f51ede618ad9370fdb2a89d95276df695b6db060f2d683aa9b80a40770a1c76cbff7bfc7628c155e0fec88ab4c5ce051c8681190c8e60970230a52c428b1b1043ea5df17d5c10b25a5c6ddd941a023b00a9f61e89a4760cfcb0851eeea9c393d8b7dddfb9efb64
f1118b3fb9d45b610b5ec92449c72a451540f25b407d5162d85bb57dd1864d69bf7dda142767d6397437e950ed071793b63fa5ec834ab66ea827f2801fb7f33a2445587fb17a431b9a89a512db355e4b2f0290f8528112fe52e3f30e8748c2f2125aa2e4d8781f74d173066e1cceb94931d004e11c916f5d608000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark
%%EndFont
setpacking
%AI3_EndRider
[
39/quotesingle 96/grave 128/Euro 130/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE 145/quoteleft
/quoteright/quotedblleft/quotedblright/bullet/endash/emdash/tilde/trademark
/scaron/guilsinglright/oe/dotlessi 159/Ydieresis /space 164/currency 166/brokenbar
168/dieresis/copyright/ordfeminine 172/logicalnot/hyphen/registered/macron/ring
/plusminus/twosuperior/threesuperior/acute/mu 183/periodcentered/cedilla
/onesuperior/ordmasculine 188/onequarter/onehalf/threequarters 192/Agrave
/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla/Egrave/Eacute
/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis/Eth/Ntilde
/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash/Ugrave
/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave/aacute
/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute/ecircumflex
/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute
/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex
/udieresis/yacute/thorn/ydieresis
TE
%AI55J_Tsume: None
%AI3_BeginEncoding: _Myriad-Roman Myriad-Roman
[/_Myriad-Roman/Myriad-Roman 0 0 1 TZ%AI3_EndEncoding AdobeType
%AI5_Begin_NonPrinting
Np
7 Bn
%AI5_BeginGradient: (Black, White Radial)
(Black, White Radial) 1 2 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
[
0 0 0 0 1 50 0 %_Bs
0 0 0 1 1 50 100 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Copper)
(Copper) 0 7 Bd
[
<
5E5E5D5D5C5B5B5A5A595958585757565655555454535352525150504F4F4E4E4D4D4C4C4B4B4A4A
494948484747464645444443434242414140403F3F3E3E3D3D3C3C3B3B3A39393838373736363535
343433333232313130302F2F2E2D2D2C2C2B2B2A2A29292828272726262525242423222221212020
1F1F1E1E1D1D1C1C1B1B1A1A1919181817161615151414131312121111
>
<
9A9998989796959493929291908F8E8D8C8C8B8A8988878686858483828181807F7E7D7C7B7B7A79
787776757574737271706F6F6E6D6C6B6A6969686766656463636261605F5E5D5D5C5B5A59585757
56555453525151504F4E4D4C4B4B4A49484746454544434241403F3F3E3D3C3B3A3A393837363534
34333231302F2E2E2D2C2B2A2928282726252423222221201F1E1D1C1C
>
<
B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A
898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A6968676665646362
61605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A
393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D
>
<
12121212121212111111111111111110101010101010100F0F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0D
0D0D0D0D0D0D0D0C0C0C0C0C0C0C0C0C0B0B0B0B0B0B0B0B0A0A0A0A0A0A0A0A0909090909090909
08080808080808080707070707070707060606060606060605050505050505050404040404040404
0403030303030303030202020202020202010101010101010100000000
>
1 %_Br
<
73737373737373737373737373737373737373737373737272727272727272727171717171717070
7070706F6F6F6F6F6E6E6E6E6D6D6D6D6C6C6C6B6B6B6A6A6A696969686867676766666565646464
63636262616160605F5F5E
>
<
BCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBBBBBBBBBBBBBBBBBABABABABAB9B9B9B9B8B8B8B8B7
B7B7B6B6B6B5B5B5B4B4B3B3B3B2B2B1B1B0B0AFAFAEAEADADACACABAAAAA9A9A8A7A7A6A5A4A4A3
A2A2A1A09F9E9E9D9C9B9A
>
<
D9D9D9D9D9D9D9D9D9D9D9D9D8D8D8D8D8D8D8D8D8D7D7D7D7D7D7D6D6D6D6D5D5D5D5D4D4D4D3D3
D3D2D2D2D1D1D0D0CFCFCFCECECDCDCCCBCBCACAC9C9C8C7C7C6C5C5C4C3C2C2C1C0BFBFBEBDBCBB
BABAB9B8B7B6B5B4B3B2B1
>
<
28282828282828272727272727272727272727272727272727262626262626262625252525252524
242424242323232323222222212121212020201F1F1F1E1E1E1D1D1D1C1C1C1B1B1A1A1A19191818
1717161615151414131312
>
1 %_Br
<
5E5F5F6060616162626364646565666667676868696A6A6B6B6C6C6D6D6E6E6F7070717172727373
>
<
9A9B9C9D9E9F9FA0A1A2A3A4A5A6A6A7A8A9AAABACADADAEAFB0B1B2B3B4B4B5B6B7B8B9BABBBBBC
>
<
B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9
>
<
12131314141516161717181819191A1A1B1C1C1D1D1E1E1F1F202021222223232424252526262728
>
1 %_Br
<
0001010202030304040505060607070809090A0A0B0B0C0C0D0D0E0E0F0F10101112121313141415
15161617171818191A1A1B1B1C1C1D1D1E1E1F1F202021212223232424252526262727282829292A
2B2B2C2C2D2D2E2E2F2F303031313232333434353536363737383839393A3A3B3C3C3D3D3E3E3F3F
404041414242434344454546464747484849494A4A4B4B4C4D4D4E4E4F4F50505151525253535455
5556565757585859595A5A5B5B5C5C5D5E5E
>
<
00010203030405060708090A0A0B0C0D0E0F1011111213141516171818191A1B1C1D1E1E1F202122
23242525262728292A2B2C2C2D2E2F3031323333343536373839393A3B3C3D3E3F40404142434445
46474748494A4B4C4D4E4E4F50515253545455565758595A5B5B5C5D5E5F60616262636465666768
69696A6B6C6D6E6F6F70717273747576767778797A7B7C7D7D7E7F80818283848485868788898A8A
8B8C8D8E8F9091919293949596979898999A
>
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1
>
<
00000000000101010101010101010102020202020202020202030303030303030303040404040404
04040404050505050505050505050606060606060606060607070707070707070708080808080808
080808090909090909090909090A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C
0C0C0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F0F0F101010101010101010
111111111111111111111212121212121212
>
1 %_Br
<
24232222212120201F1F1E1D1D1C1C1B1B1A1919181817171615151414131312121110100F0F0E0E
0D0C0C0B0B0A0A0908080707060605050403030202010100
>
<
3B3A39383737363534333231302F2E2D2C2B2A29282827262524232221201F1E1D1C1B1A19181817
161514131211100F0E0D0C0B0A0908080706050403020100
>
<
403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A2928272625242322211F1E1D1C1B1A1918
17161514131211100F0E0D0C0B0A09080706050403020100
>
<
01010101010101010101010101010101010101010100000000000000000000000000000000000000
000000000000000000000000000000000000000000000000
>
1 %_Br
<
59595858585757575656565555555454545353535252525151515050504F4F4F4E4E4E4D4D4D4C4C
4C4B4B4B4A4A4A4949494848484747474646464545454444444343434242424141414040403F3F3F
3E3E3E3D3D3D3C3C3C3B3B3A3A3A3939393838383737373636363535353434343333333232323131
313030302F2F2F2E2E2E2D2D2D2C2C2C2B2B2B2A2A2A292929282828272727262626252525242424
>
<
ADACACABAAAAA9A8A7A7A6A5A5A4A3A2A2A1A0A09F9E9D9D9C9B9B9A999898979696959493939291
91908F8E8E8D8C8B8B8A89898887868685848483828181807F7F7E7D7C7C7B7A7A79787777767575
747372727170706F6E6D6D6C6B6B6A69686867666665646363626161605F5E5E5D5C5C5B5A595958
57565655545453525151504F4F4E4D4C4C4B4A4A49484747464545444342424140403F3E3D3D3C3B
>
<
DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8
B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A99989796959493929190
8F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A6968
67666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A49484746454443424140
>
<
0F0F0F0F0F0E0E0E0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0D0D0D0D0C0C0C0C0C0C0C0C0C0C0C0B0B
0B0B0B0B0B0B0B0B0B0B0A0A0A0A0A0A0A0A0A0A0A09090909090909090909090808080808080808
08080807070707070707070707070706060606060606060606060505050505050505050505040404
04040404040404040303030303030303030303030202020202020202020202010101010101010101
>
1 %_Br
[
0.0656 0.1081 0.1138 0.0003 1 50 100 %_Bs
0.3689 0.6046 0.6942 0.0716 1 50 85 %_Bs
0.4526 0.7386 0.8504 0.1551 1 73.9136 75 %_Bs
0.3689 0.6046 0.6942 0.0716 1 50 63 %_Bs
0 0 0 0 1 50 34 %_Bs
0.1397 0.2324 0.251 0.0029 1 50 14 %_Bs
0.3494 0.6791 0.8753 0.0583 1 50 2 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Rainbow)
(Rainbow) 0 6 Bd
[
<
F9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2
D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAA
A9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988878685848382
81807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A
595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938373635343332
31302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A
0908070605040302
>
0.9882
<
05050505050505050505050505050505050505050505050505050505050505050505050505050505
05050606060606060606060606060606060606060606060606060606060606060606060606060606
06060606060606060606060606060606060606060606060606060606060606060606060606060606
06060606070707070707070707070707070707070707070707070707070707070707070707070707
07070707070707070707070707070707070707070707070707070707070707070707070707070707
07070707070708080808080808080808080808080808080808080808080808080808080808080808
0808080808080808
>
0
1 %_Br
<
E8E8E8E8E8E8E8E9E9E9E9E9E9E9E9E9E9E9E9E9E9EAEAEAEAEAEAEAEAEAEAEAEAEAEAEBEBEBEBEB
EBEBEBEBEBEBEBEBECECECECECECECECECECECECECECEDEDEDEDEDEDEDEDEDEDEDEDEDEDEEEEEEEE
EEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F0F0F0F0F1F1F1F1
F1F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F3F3F3F3F3F3F4F4F4
F4F4F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F6F6F6F6F7F7
F7F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8F8F8F8F8F8F8F9F9F9F9F9F9F9
>
<
1415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B
3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F60616263
6465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B
8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3
B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADB
DCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFC
>
<
09090909090909090909090909090909090909090909090909090909090908080808080808080808
08080808080808080808080808080808080808080808080808080808080808080808080808080808
08080808080808080707070707070707070707070707070707070707070707070707070707070707
07070707070707070707070707070707070707070707070707060606060606060606060606060606
06060606060606060606060606060606060606060606060606060606060606060606060606060606
060606050505050505050505050505050505050505050505050505050505050505
>
0
1 %_Br
<
ECECECECECECECECECECECECECECECECECECECECECECECECECECECECECEBEBEBEBEBEBEBEBEBEBEB
EBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEB
EBEBEBEBEBEBEBEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEA
EAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAE9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9
E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9
E9E9E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8
>
<
13131313131313131313131313131313131313131313131313131313131313131313131313131313
13131313131313131313131313131313131313131313131313131313131313131313131313131313
13131313131313131313131313131313131313131313131313131313131313131313131313141414
14141414141414141414141414141414141414141414141414141414141414141414141414141414
14141414141414141414141414141414141414141414141414141414141414141414141414141414
14141414141414141414141414141414141414141414141414141414141414
>
<
EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8
C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A0
9F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A7978
77767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A59585756555453525150
4F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A2928
27262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09
>
0
1 %_Br
<
08090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F
303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F5051525354555657
58595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F
808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7
A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF
D0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBEC
>
<
05050505050505050506060606060606060606060606060606070707070707070707070707070707
070808080808080808080808080808080808090909090909090909090909090909090A0A0A0A0A0A
0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0C0C0C0C
0C0C0C0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F
0F0F0F0F0F0F0F0F0F0F0F0F10101010101010101010101010101010111111111111111111111111
1111111112121212121212121212121212121212131313131313131313
>
<
E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9EAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEA
EAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEB
EBEBEBEBEBEBEBEBEBEBEBEBEBEBEBECECECECECECECECECECECECECECECECECECECECECECECECEC
ECECECECECECECECECECECECECEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDED
EDEDEDEDEDEDEDEDEDEDEDEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
EEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEF
>
0
1 %_Br
<
03030303030303030303030303030303030303030303030304040404040404040404040404040404
04040404040404040404040404040404040404040404040404040404040404040505050505050505
05050505050505050505050505050505050505050505050505050505050505050505050505050505
06060606060606060606060606060606060606060606060606060606060606060606060606060606
06060606060606060707070707070707070707070707070707070707070707070707070707070707
07070707070707070707070707070707080808080808080808080808080808080808080808080808
08
>
<
F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCE
CDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6
A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E
7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A59585756
5554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E
2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706
05
>
0.9137
0
1 %_Br
[
0.0078 0.9882 0.0314 0 1 50 100 %_Bs
0.9765 0.9882 0.0196 0 1 50 80 %_Bs
0.9098 0.0784 0.0353 0 1 50 60 %_Bs
0.9255 0.0745 0.9373 0 1 50 40 %_Bs
0.0314 0.0196 0.9137 0 1 50 20 %_Bs
0.0118 0.9608 0.9137 0 1 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Tropical Sunset)
(Tropical Sunset) 0 5 Bd
[
0
<
BFBEBDBCBBBAB9B8B7B6B5B4B3B2B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A3A2A1A09F9E9D9C9B9A
9A99989796959493939291908F8E8E8D8C8B8A898988878685858483828181807F7E7D7D7C7B7A7A
79787777767575747372727170706F6E6D6D6C6B6B6A696968676766666564646362626161605F5F
5E5E5D5C5C5B5B5A5A595858575756565555545453535252515150504F4F4E4E4D4D4D4C4C4B4B4B
4A4A4949494848474747464646454545444444444343434342424242414141414141404040404040
4040
>
<
BFBFBFBFBFC0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1
C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C3C3C3C3C3C3C3C3C3C3C3C3C3C3C3C3C3C3C3C3
C3C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5
C5C5C5C5C5C5C5C5C5C5C5C5C5C6C6C6C6C6C6C6C6C6C6C6C6C6C6C6C6C6C6C6C6C6C6C6C6C6C6C6
C6C6C6C6C6C6C6C6C6C6C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7
C7C7
>
0
1 %_Br
<
08080808080808080808080807070707070707070707070707070707070707070707070706060606
06060606060606060606060606060606060606050505050505050505050505050505050505050505
05050404040404040404040404040404040404040404040404030303030303030303030303030303
03030303030303030202020202020202020202020202020202020202020202020101010101010101
010101010101010101010101010101000000000000000000000000
>
<
05060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C
2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F5051525354
55565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C
7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4
A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF
>
<
E9E9E9E8E8E8E8E7E7E7E7E7E6E6E6E6E5E5E5E5E5E4E4E4E4E3E3E3E3E2E2E2E2E2E1E1E1E1E0E0
E0E0E0DFDFDFDFDEDEDEDEDEDDDDDDDDDCDCDCDCDCDBDBDBDBDADADADADAD9D9D9D9D8D8D8D8D7D7
D7D7D7D6D6D6D6D5D5D5D5D5D4D4D4D4D3D3D3D3D3D2D2D2D2D1D1D1D1D1D0D0D0D0CFCFCFCFCFCE
CECECECDCDCDCDCCCCCCCCCCCBCBCBCBCACACACACAC9C9C9C9C8C8C8C8C8C7C7C7C7C6C6C6C6C6C5
C5C5C5C4C4C4C4C4C3C3C3C3C2C2C2C2C1C1C1C1C1C0C0C0C0BFBF
>
0
1 %_Br
<
202020201F1F1F1F1F1F1F1F1F1F1E1E1E1E1E1E1E1E1E1E1D1D1D1D1D1D1D1D1D1C1C1C1C1C1C1C
1C1C1C1B1B1B1B1B1B1B1B1B1B1A1A1A1A1A1A1A1A1A1A1919191919191919191818181818181818
18181717171717171717171716161616161616161616151515151515151515151414141414141414
14131313131313131313131212121212121212121211111111111111111111101010101010101010
0F0F0F0F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0D0D0D0C0C0C0C0C0C0C0C0C0B
0B0B0B0B0B0B0B0B0B0A0A0A0A0A0A0A0A0A0A090909090909090909090808080808
>
<
696868676766666665656464636363626261616060605F5F5E5E5D5D5D5C5C5B5B5A5A5A59595858
575757565655555454545353525251515150504F4F4E4E4E4D4D4C4C4B4B4B4A4A49494948484747
46464645454444434343424241414040403F3F3E3E3D3D3D3C3C3B3B3A3A3A393938383737373636
35353434343333323231313130302F2F2E2E2E2D2D2C2C2B2B2B2A2A292928282827272626252525
24242323222222212120201F1F1F1E1E1D1D1C1C1C1B1B1A1A1A1919181817171716161515141414
1313121211111110100F0F0E0E0E0D0D0C0C0B0B0B0A0A0909080808070706060505
>
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9
>
0
1 %_Br
<
CCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5
A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D
7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A5958575655
54535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D
2C2B2A29282726252423222120
>
<
000101020203040405050607070809090A0A0B0C0C0D0D0E0F0F1010111212131314151516161718
18191A1A1B1B1C1D1D1E1E1F20202121222323242425262627282829292A2B2B2C2C2D2E2E2F2F30
3131323233343435353637373839393A3A3B3C3C3D3D3E3F3F404041424243434445454647474848
494A4A4B4B4C4D4D4E4E4F50505151525353545455565657585859595A5B5B5C5C5D5E5E5F5F6061
61626263646465666667676869
>
0
0
1 %_Br
[
0 0.25 0.78 0 1 50 100 %_Bs
0 0.75 0.75 0 1 35.5263 57.3034 %_Bs
0.0314 0.0196 0.9137 0 1 50 55.618 %_Bs
0.125 0.41 0 0 1 50 44.9438 %_Bs
0.8 0 0 0 1 50 19.1011 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 1)
(Unnamed gradient 1) 0 2 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
[
0 0 50 100 %_Bs
1 0 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Violet Eye)
(Violet Eye) 1 5 Bd
[
<
FFFFFFFFFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFBFBFBFBFBFBFBFBFAFAFAFAFA
FAFAFAFAF9F9F9F9F9F9F9F9F9F8F8F8F8F8F8F8F8F8F8F7F7F7F7F7F7F7F7F7F7F6F6F6F6F6F6F6
F6F6F6F5F5F5F5F5F5F5F5F5F5F5F4F4F4F4F4F4F4F4F4F4F4F4F3F3F3F3F3F3F3F3F3F3F3F3F3F2
F2F2F2F2F2F2F2F2F2F2F2F2F2F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F0F0F0F0F0F0F0F0F0F0F0F0
F0F0F0F0F0EFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
EEEEEEEEEEEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDECECECECECECECECECEC
ECECECECECECECECECECECECECECECECECECECECECEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEB
EBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEA
EAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEA
EAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAE9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9
E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9
E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9
E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9
E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9
E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9
>
<
FFFEFEFDFCFCFBFAFAF9F9F8F7F7F6F6F5F4F4F3F3F2F1F1F0F0EFEEEEEDEDECECEBEAEAE9E9E8E8
E7E7E6E6E5E5E4E3E3E2E2E1E1E0E0DFDFDEDEDDDDDCDCDCDBDBDADAD9D9D8D8D7D7D6D6D5D5D5D4
D4D3D3D2D2D2D1D1D0D0CFCFCFCECECDCDCDCCCCCBCBCBCACACAC9C9C8C8C8C7C7C7C6C6C5C5C5C4
C4C4C3C3C3C2C2C2C1C1C1C0C0C0BFBFBFBEBEBEBDBDBDBDBCBCBCBBBBBBBABABABAB9B9B9B8B8B8
B8B7B7B7B7B6B6B6B5B5B5B5B4B4B4B4B3B3B3B3B2B2B2B2B2B1B1B1B1B0B0B0B0AFAFAFAFAFAEAE
AEAEAEADADADADADACACACACACABABABABABAAAAAAAAAAAAA9A9A9A9A9A9A8A8A8A8A8A8A7A7A7A7
A7A7A6A6A6A6A6A6A6A5A5A5A5A5A5A5A4A4A4A4A4A4A4A3A3A3A3A3A3A3A3A2A2A2A2A2A2A2A2A2
A1A1A1A1A1A1A1A1A1A0A0A0A0A0A0A0A0A0A09F9F9F9F9F9F9F9F9F9F9F9E9E9E9E9E9E9E9E9E9E
9E9E9D9D9D9D9D9D9D9D9D9D9D9D9D9D9D9C9C9C9C9C9C9C9C9C9C9C9C9C9C9C9C9C9B9B9B9B9B9B
9B9B9B9B9B9B9B9B9B9B9B9B9B9B9A9A9A9A9A9A9A9A9A9A9A9A9A9A9A9A9A9A9A9A9A9A9A9A9A9A
9A9A9A99999999999999999999999999999999999999999999999999999999999999999999999999
99999999999999999999999998989898989898989898989898989898989898989898989898989898
98989898989898989898989898989898989898989898989898989898989898989898989898989898
98989898989898989898989898989898989898989898989898989898989898989898989898989898
98989898989898989898989898989898989898989898989898989898989898989898989898989898
>
<
06060606060606060606060606060505050505050505050505050505050505050505050505050505
05050505040404040404040404040404040404040404040404040404040404040404040404040404
03030303030303030303030303030303030303030303030303030303030303030303030303030303
03030303020202020202020202020202020202020202020202020202020202020202020202020202
02020202020202020202020202020202020202020202020101010101010101010101010101010101
01010101010101010101010101010101010101010101010101010101010101010101010101010101
01010101010101010101010101010101010101010101010101010101010101010101010101010101
01010101010101010000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
>
<
FFFDFCFAF9F7F5F4F2F1EFEEECEBE9E8E6E5E3E2E0DFDDDCDAD9D7D6D5D3D2D0CFCECCCBC9C8C7C5
C4C3C1C0BFBDBCBBBAB8B7B6B5B3B2B1B0AEADACABAAA8A7A6A5A4A2A1A09F9E9D9C9A9998979695
94939291908F8D8C8B8A898887868584838281807F7E7D7C7C7B7A79787776757473727170706F6E
6D6C6B6A6A6968676665656463626161605F5E5D5D5C5B5A5A59585757565555545352525150504F
4E4E4D4C4C4B4A4A494848474646454544434342424140403F3F3E3D3D3C3C3B3B3A3A3939383737
3636353534343333323231313030302F2F2E2E2D2D2C2C2B2B2B2A2A292928282827272626262525
24242423232322222121212020201F1F1F1E1E1E1D1D1D1C1C1C1B1B1B1A1A1A1A19191918181818
1717171616161615151515141414141313131312121212111111111110101010100F0F0F0F0F0E0E
0E0E0E0D0D0D0D0D0D0C0C0C0C0C0B0B0B0B0B0B0B0A0A0A0A0A0A09090909090909090808080808
08080807070707070707070606060606060606060605050505050505050505050404040404040404
04040404040403030303030303030303030303030303020202020202020202020202020202020202
02020202010101010101010101010101010101010101010101010101010101010101010101010101
01010100000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
>
1 %_Br
<
E9E9E9E9E9E8E8E8E8E8E8E8E8E8E7E7E7E7E7E7E7E7E6E6E6E6E6E6E6E6E6E5E5E5E5E5E5E5E5E5
E4E4E4E4E4E4E4E4E4E3E3E3E3E3E3E3E3E2E2E2E2E2E2E2E2E2E1E1E1E1E1E1E1E1E1E0E0E0E0E0
E0E0E0E0DFDFDFDFDFDFDFDFDEDEDEDEDEDEDEDEDEDDDDDDDDDDDDDDDDDDDCDCDCDCDC
>
<
9897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271
706F6E6D6C6B6A696867666564636261605F5D5C5B5A595857565554535251504F4E4D4C4B4A4948
47464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A2928272625
>
0
0
1 %_Br
<
DCDCDCDCDBDBDBDBDBDADADAD9D9D9D8D8D8D7D7D7D6D6D5D5D5D4D4D3D3D2D2D2D1D1D0D0CFCFCE
CECDCDCCCBCBCACAC9C9C8C8C7C6C6C5C5C4C4C3C2C2C1C0C0BFBFBEBDBDBCBBBBBAB9B9B8B7B7B6
B5B5B4B3B2B2B1B0B0AFAEADADACABAAAAA9A8A7A7A6A5A4A4A3A2A1A1A09F9E9D9D9C9B9A999998
9796959494939291908F
>
<
252525252626262627272728282829292A2A2A2B2B2C2C2D2D2E2E2F2F3030313132323334343535
3637373838393A3A3B3C3C3D3E3E3F40404142434344454646474849494A4B4C4C4D4E4F50505152
5354545556575859595A5B5C5D5E5F5F60616263646566676868696A6B6C6D6E6F70717273747576
7778797A7B7C7D7E7F80
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000010101010101010101010101010101010101010101010101010101
01010101010101010101010101010101010101010101010101010101010101010101010202020202
02020202020202020202
>
0
1 %_Br
<
8F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A6968
67666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A49484746454443424140
3F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A1918
17161514131211100F0E0D0C0B0A09080706050403020100
>
<
807F7E7D7C7B7A79787777767574737271706F6F6E6D6C6B6A69686767666564636261605F5F5E5D
5C5B5A59585756565554535251504F4E4E4D4C4B4A49484746464544434241403F3E3E3D3C3B3A39
383736353534333231302F2E2D2D2C2B2A29282726252524232221201F1E1D1D1C1B1A1918171615
1514131211100F0E0D0C0C0B0A0908070605040403020100
>
<
02020202020202020202020202020202020202020202020101010101010101010101010101010101
01010101010101010101010101010101010101010101010101010101010101010101010101010101
01010101010101010101010101010101010101010101010000000000000000000000000000000000
000000000000000000000000000000000000000000000000
>
0
1 %_Br
[
1 1 0.0235 1 1 16.6667 25.8427 %_Bs
0.9137 0.5961 0 0 1 50 49.4382 %_Bs
0.8627 0.1451 0 0 1 61.5385 64.6067 %_Bs
0.5623 0.5 0.007 0 1 50 70.2247 %_Bs
0 0 0 0 1 50 78.6517 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (White, Black)
(White, Black) 0 2 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
[
0 0 0 1 1 50 100 %_Bs
0 0 0 0 1 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI3_BeginPattern: (Azure Rings)
(Azure Rings) 22.5 22.5 58.5 58.5 [
%AI3_Tile
(0 O 0 R 0.9569 0.9294 0 0 k
 0.9569 0.9294 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1.75 w 4 M []0 d0 XR
40.5 58.5 m
40.5 48.5586 32.4409 40.5 22.5 40.5 c
12.5591 40.5 4.5 48.5586 4.5 58.5 c
4.5 68.4414 12.5591 76.5 22.5 76.5 c
32.4409 76.5 40.5 68.4414 40.5 58.5 c
s40.5 22.5 m
40.5 12.5586 32.4409 4.5 22.5 4.5 c
12.5591 4.5 4.5 12.5586 4.5 22.5 c
4.5 32.4414 12.5591 40.5 22.5 40.5 c
32.4409 40.5 40.5 32.4414 40.5 22.5 c
s40.5 40.5 m
40.5 30.5586 32.4409 22.5 22.5 22.5 c
12.5591 22.5 4.5 30.5586 4.5 40.5 c
4.5 50.4414 12.5591 58.5 22.5 58.5 c
32.4409 58.5 40.5 50.4414 40.5 40.5 c
s58.5 58.5 m
58.5 48.5586 50.4409 40.5 40.5 40.5 c
30.5591 40.5 22.5 48.5586 22.5 58.5 c
22.5 68.4414 30.5591 76.5 40.5 76.5 c
50.4409 76.5 58.5 68.4414 58.5 58.5 c
s58.5 22.5 m
58.5 12.5586 50.4409 4.5 40.5 4.5 c
30.5591 4.5 22.5 12.5586 22.5 22.5 c
22.5 32.4414 30.5591 40.5 40.5 40.5 c
50.4409 40.5 58.5 32.4414 58.5 22.5 c
s58.5 40.5 m
58.5 30.5586 50.4409 22.5 40.5 22.5 c
30.5591 22.5 22.5 30.5586 22.5 40.5 c
22.5 50.4414 30.5591 58.5 40.5 58.5 c
50.4409 58.5 58.5 50.4414 58.5 40.5 c
s76.5 58.5 m
76.5 48.5586 68.4409 40.5 58.5 40.5 c
48.5591 40.5 40.5 48.5586 40.5 58.5 c
40.5 68.4414 48.5591 76.5 58.5 76.5 c
68.4409 76.5 76.5 68.4414 76.5 58.5 c
s76.5 22.5 m
76.5 12.5586 68.4409 4.5 58.5 4.5 c
48.5591 4.5 40.5 12.5586 40.5 22.5 c
40.5 32.4414 48.5591 40.5 58.5 40.5 c
68.4409 40.5 76.5 32.4414 76.5 22.5 c
s76.5 40.5 m
76.5 30.5586 68.4409 22.5 58.5 22.5 c
48.5591 22.5 40.5 30.5586 40.5 40.5 c
40.5 50.4414 48.5591 58.5 58.5 58.5 c
68.4409 58.5 76.5 50.4414 76.5 40.5 c
s%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Camouflage)
(Camouflage) 1 1 73 73 [
%AI3_Tile
(0 O 0 R 0.6 0.1412 0.9373 0.0275 k
 0.6 0.1412 0.9373 0.0275 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
1 73 m
1 1 L
73 1 L
73 73 L
1 73 L
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.4941 0.3529 0.9529 0.2 k
 0.4941 0.3529 0.9529 0.2 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
18.5449 73 m
18.5449 1 L
46.7832 1 L
46.7832 73 L
18.5449 73 L
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.1882 0.1098 0.9059 0.0157 k
 0.1882 0.1098 0.9059 0.0157 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
11.9512 1 m
11.9512 4.7129 9.2314 2.8813 9.2314 6.5938 c
9.2314 10.2334 4.25 10.2334 4.25 13.8735 c
4.25 17.4858 10.0313 17.4858 10.0313 21.0991 c
10.0313 24.832 10.208 24.832 10.208 28.5654 c
10.208 32.3071 5.5205 32.3071 5.5205 36.0469 c
5.5205 39.7021 11.8838 39.7021 11.8838 43.356 c
11.8838 47.0566 7.4609 47.0566 7.4609 50.7568 c
7.4609 54.4043 5.7959 54.4043 5.7959 58.0542 c
5.7959 61.7686 4.6631 61.7686 4.6631 65.4805 c
4.6631 69.1636 11.9512 69.3184 11.9512 73 C
27.9268 73 L
27.9268 69.3184 22.0635 69.1636 22.0635 65.4805 c
22.0635 61.7686 28.6631 61.7686 28.6631 58.0542 c
28.6631 54.4043 25.1553 54.4043 25.1553 50.7568 c
25.1553 47.0566 28.8145 47.0566 28.8145 43.356 c
28.8145 39.7021 22.1191 39.7021 22.1191 36.0469 c
22.1191 32.3071 26.3945 32.3071 26.3945 28.5654 c
26.3945 24.832 24.4248 24.832 24.4248 21.0991 c
24.4248 17.4858 20.3838 17.4858 20.3838 13.8735 c
20.3838 10.2334 24.6055 10.2334 24.6055 6.5938 c
24.6055 2.8813 27.9268 4.7129 27.9268 1 C
11.9512 1 L
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.9216 0.2157 0.9451 0.0745 k
 0.9216 0.2157 0.9451 0.0745 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
41.875 1 m
41.875 4.7134 42.3867 2.8818 42.3867 6.5938 c
42.3867 10.2334 40.5947 10.2334 40.5947 13.8735 c
40.5947 17.4858 41.5742 17.4858 41.5742 21.0991 c
41.5742 24.832 43.6484 24.832 43.6484 28.5659 c
43.6484 32.3076 39.1709 32.3076 39.1709 36.0469 c
39.1709 39.7026 39.7549 39.7026 39.7549 43.356 c
39.7549 47.0566 45.3896 47.0566 45.3896 50.7568 c
45.3896 54.4043 40.1055 54.4043 40.1055 58.0542 c
40.1055 61.7686 40.6289 61.7686 40.6289 65.4805 c
40.6289 69.1636 41.875 69.3184 41.875 73 C
59.0752 73 L
59.0752 69.4219 53.4805 70.1934 53.4805 66.6143 c
53.4805 62.9136 55.8945 62.9136 55.8945 59.2153 c
55.8945 55.502 61.0059 55.502 61.0059 51.7886 c
61.0059 48.1489 60.5635 48.1489 60.5635 44.5103 c
60.5635 40.897 59.9277 40.897 59.9277 37.2842 c
59.9277 33.5508 56.3662 33.5508 56.3662 29.8169 c
56.3662 26.0762 61.0908 26.0762 61.0908 22.3354 c
61.0908 18.6812 52.6025 18.6812 52.6025 15.0264 c
52.6025 11.3262 55.7461 11.3262 55.7461 7.6265 c
55.7461 3.978 59.0752 4.6484 59.0752 1 C
41.875 1 L
f%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Honeycomb)
(Honeycomb) 12.9819 14.6548 65.8066 60.6758 [
%AI3_Tile
(0 O 0 R 0.4235 0.5059 0.949 0.3569 k
 0.4235 0.5059 0.949 0.3569 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 2 w 4 M []0 d0 XR
64.0161 21.3906 m
64.0161 7.9009 L
52.3345 1.1543 L
40.6475 7.9009 L
40.6475 21.3906 L
52.3345 28.1372 L
64.0161 21.3906 L
s%AI6_EndPatternLayer
) &
(0 O 0 R 0.2 0.4627 0.9922 0.0627 k
 0.2 0.4627 0.9922 0.0627 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
43.9536 19.4839 m
43.9536 9.8081 L
52.3345 4.9702 L
60.7153 9.8081 L
60.7153 19.4839 L
52.3345 24.3218 L
43.9536 19.4839 L
s%AI6_EndPatternLayer
) &
(0 O 0 R 0.4235 0.5059 0.949 0.3569 k
 0.4235 0.5059 0.949 0.3569 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 2 w 4 M []0 d0 XR
37.479 21.394 m
37.479 7.9014 L
25.7944 1.1548 L
14.1099 7.9014 L
14.1099 21.3911 L
25.7944 28.1406 L
37.479 21.394 L
s%AI6_EndPatternLayer
) &
(0 O 0 R 0.2 0.4627 0.9922 0.0627 k
 0.2 0.4627 0.9922 0.0627 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
17.4126 19.4839 m
17.4126 9.8081 L
25.7944 4.9702 L
34.1743 9.8081 L
34.1743 19.4839 L
25.7944 24.3218 L
17.4126 19.4839 L
s%AI6_EndPatternLayer
) &
(0 O 0 R 0.4235 0.5059 0.949 0.3569 k
 0.4235 0.5059 0.949 0.3569 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 2 w 4 M []0 d0 XR
24.3691 44.0386 m
24.3691 30.5459 L
12.6846 23.7993 L
1 30.5459 L
1 44.0356 L
12.6846 50.7852 L
24.3691 44.0386 L
s%AI6_EndPatternLayer
) &
(0 O 0 R 0.2 0.4627 0.9922 0.0627 k
 0.2 0.4627 0.9922 0.0627 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
4.3027 42.1284 m
4.3027 32.4526 L
12.6846 27.6147 L
21.0645 32.4526 L
21.0645 42.1284 L
12.6846 46.9663 L
4.3027 42.1284 L
s%AI6_EndPatternLayer
) &
(0 O 0 R 0.4235 0.5059 0.949 0.3569 k
 0.4235 0.5059 0.949 0.3569 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 2 w 4 M []0 d0 XR
77.2871 44.3774 m
77.2871 30.8843 L
65.603 24.1382 L
53.9185 30.8843 L
53.9185 44.3765 L
65.603 51.1226 L
77.2871 44.3774 L
s%AI6_EndPatternLayer
) &
(0 O 0 R 0.2 0.4627 0.9922 0.0627 k
 0.2 0.4627 0.9922 0.0627 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
57.2202 42.4692 m
57.2202 32.7915 L
65.603 27.9536 L
73.9819 32.7915 L
73.9819 42.4692 L
65.603 47.3081 L
57.2202 42.4692 L
s%AI6_EndPatternLayer
) &
(0 O 0 R 0.4235 0.5059 0.949 0.3569 k
 0.4235 0.5059 0.949 0.3569 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 2 w 4 M []0 d0 XR
50.7471 44.3774 m
50.7471 30.8843 L
39.0649 24.1382 L
27.3774 30.8843 L
27.3774 44.3765 L
39.0649 51.1235 L
50.7471 44.3774 L
s%AI6_EndPatternLayer
) &
(0 O 0 R 0.2 0.4627 0.9922 0.0627 k
 0.2 0.4627 0.9922 0.0627 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
30.6821 42.4692 m
30.6821 32.7915 L
39.0649 27.9517 L
47.4438 32.7915 L
47.4438 42.4702 L
39.0649 47.3091 L
30.6821 42.4692 L
s%AI6_EndPatternLayer
) &
(0 O 0 R 0.4235 0.5059 0.949 0.3569 k
 0.4235 0.5059 0.949 0.3569 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 2 w 4 M []0 d0 XR
37.479 67.3599 m
37.479 53.8682 L
25.7944 47.1221 L
14.1099 53.8682 L
14.1099 67.3599 L
25.7944 74.1074 L
37.479 67.3599 L
s%AI6_EndPatternLayer
) &
(0 O 0 R 0.2 0.4627 0.9922 0.0627 k
 0.2 0.4627 0.9922 0.0627 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
17.4126 65.4526 m
17.4126 55.7749 L
25.7944 50.937 L
34.1743 55.7749 L
34.1772 65.4526 L
25.7944 70.2905 L
17.4126 65.4526 L
s%AI6_EndPatternLayer
) &
(0 O 0 R 0.4235 0.5059 0.949 0.3569 k
 0.4235 0.5059 0.949 0.3569 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 2 w 4 M []0 d0 XR
64.0161 67.3599 m
64.0161 53.8682 L
52.3345 47.1221 L
40.6475 53.8682 L
40.6475 67.3599 L
52.3345 74.1074 L
64.0161 67.3599 L
s%AI6_EndPatternLayer
) &
(0 O 0 R 0.2 0.4627 0.9922 0.0627 k
 0.2 0.4627 0.9922 0.0627 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
43.9536 65.4526 m
43.9536 55.7749 L
52.3345 50.937 L
60.7153 55.7749 L
60.7153 65.4526 L
52.3345 70.2905 L
43.9536 65.4526 L
s%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Jungle Stripes)
(Jungle Stripes) 37 19 73 55 [
%AI3_Tile
(0 O 0 R 1 0 1 0 k
 1 0 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 18 w 4 M []0 d0 XR
37 37 m
73 37 l
S%AI6_EndPatternLayer
) &
(0 O 0 R 0.3451 0 0.6863 0 k
 0.3451 0 0.6863 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 9 w 4 M []0 d0 XR
37 37 m
73 37 l
S%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Mediterranean Tiles)
(Mediterranean Tiles) 4.9482 11.5332 39.291 45.8818 [
%AI3_Tile
(0 O 0 R 0 0 0 0 k
 0 0 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.3 w 4 M []0 d0 XR
0.1499 40.748 m
10.0083 40.749 L
16.9673 33.79 L
16.9702 23.9297 L
10.0093 16.9697 L
0.1509 16.9688 L
0.1499 40.748 L
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.57 0.75 0 0 k
 0.57 0.75 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.3 w 4 M []0 d0 XR
0.1499 40.748 m
10.0083 40.749 L
16.9673 33.79 L
16.9702 23.9297 L
10.0093 16.9697 L
0.1509 16.9688 L
0.1499 40.748 L
s%AI6_EndPatternLayer
) &
(0 O 0 R 0 0 0 0 k
 0 0 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.3 w 4 M []0 d0 XR
16.9712 0.1504 m
10.0122 7.1094 L
10.0093 16.9697 L
16.9702 23.9297 L
26.8296 23.9307 L
33.7915 16.9727 L
33.7915 7.1123 L
26.8335 0.1514 L
16.9712 0.1504 L
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.57 0.75 0 0 k
 0.57 0.75 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.3 w 4 M []0 d0 XR
16.9712 0.1504 m
10.0122 7.1094 L
10.0093 16.9697 L
16.9702 23.9297 L
26.8296 23.9307 L
33.7915 16.9727 L
33.7915 7.1123 L
26.8335 0.1514 L
16.9712 0.1504 L
s%AI6_EndPatternLayer
) &
(0 O 0 R 0 0 0 0 k
 0 0 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.3 w 4 M []0 d0 XR
16.9673 33.79 m
10.0083 40.749 L
10.0054 50.6084 L
16.9663 57.5693 L
26.8257 57.5703 L
33.7876 50.6113 L
33.7876 40.752 L
26.8296 33.791 L
16.9673 33.79 L
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.57 0.75 0 0 k
 0.57 0.75 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.3 w 4 M []0 d0 XR
16.9673 33.79 m
10.0083 40.749 L
10.0054 50.6084 L
16.9663 57.5693 L
26.8257 57.5703 L
33.7876 50.6113 L
33.7876 40.752 L
26.8296 33.791 L
16.9673 33.79 L
s%AI6_EndPatternLayer
) &
(0 O 0 R 0 0 0 0 k
 0 0 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.3 w 4 M []0 d0 XR
33.7915 16.9727 m
26.8296 23.9307 L
26.8296 33.791 L
33.7876 40.752 L
43.6475 40.7529 L
50.6094 33.7939 L
50.6094 23.9336 L
43.6494 16.9736 L
33.7915 16.9727 L
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.57 0.75 0 0 k
 0.57 0.75 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.3 w 4 M []0 d0 XR
33.7915 16.9727 m
26.8296 23.9307 L
26.8296 33.791 L
33.7876 40.752 L
43.6475 40.7529 L
50.6094 33.7939 L
50.6094 23.9336 L
43.6494 16.9736 L
33.7915 16.9727 L
s%AI6_EndPatternLayer
) &
(0 O 0 R 0.9725 0.9451 0 0 k
 0.9725 0.9451 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
43.6514 7.1123 m
43.6514 16.9727 L
33.7915 16.9727 L
33.7915 7.1123 L
43.6514 7.1123 L
f26.8296 23.9307 m
26.8296 33.791 L
16.9702 33.791 L
16.9702 23.9307 L
26.8296 23.9307 L
f10.0093 7.1094 m
10.0093 16.9697 L
0.1538 16.9697 L
0.1538 7.1094 L
10.0093 7.1094 L
f43.6494 40.752 m
43.6494 50.6113 L
33.7876 50.6113 L
33.7876 40.752 L
43.6494 40.752 L
f10.0083 40.749 m
10.0083 50.6084 L
0.1499 50.6084 L
0.1499 40.749 L
10.0083 40.749 L
f%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Pyramids)
(Pyramids) 1 1 19.5 19.5 [
%AI3_Tile
(0 O 0 R 0.1882 0.1294 0.102 0.0118 k
 0.1882 0.1294 0.102 0.0118 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
1 19.5 m
10.25 10.25 l
19.5 19.5 l
1 19.5 l
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.6235 0.4863 0.4863 0.4784 k
 0.6235 0.4863 0.4863 0.4784 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
19.5 1 m
10.25 10.25 l
1 1 l
19.5 1 l
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.3529 0.2549 0.2235 0.0667 k
 0.3529 0.2549 0.2235 0.0667 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
1 1 m
10.25 10.25 l
1 19.5 l
1 1 l
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.4902 0.3647 0.3451 0.2196 k
 0.4902 0.3647 0.3451 0.2196 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
19.5 19.5 m
10.25 10.25 l
19.5 1 l
19.5 19.5 l
f%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
1 1 1 1 k
([Registration]) Pc
1 1 1 1 k
([Registration]) Pc
0 0 0 0 k
(White) Pc
0 0 0 1 k
(Black) Pc
0 0 0 0.8 k
(80% Black) Pc
0 0 0 0.6 k
(60% Black) Pc
0 0 0 0.4 k
(40% Black) Pc
0 0 0 0.2 k
(20% Black) Pc
0 1 1 0 k
(Red M=100 Y=100) Pc
0 0.75 0.75 0 k
(75% Red M=75 Y=75) Pc
0 0.5 0.5 0 k
(50% Red M=50 Y=50) Pc
0 0.25 0.25 0 k
(25% Red M=25 Y=25) Pc
0.8 0 1 0 k
(Green C=80 Y=100) Pc
0.6 0 0.75 0 k
(75% Green C=60 Y=75) Pc
0.4 0 0.5 0 k
(50% Green C=40 Y=50) Pc
0.2 0 0.25 0 k
(25% Green C=20 Y=25) Pc
1 0.5 0 0 k
(Blue C=100 M=50) Pc
0.75 0.375 0 0 k
(75% Blue C=75 M=37.5) Pc
0.5 0.25 0 0 k
(50% Blue C=50 M=25) Pc
0.25 0.125 0 0 k
(25% Blue C=25 M=12.5) Pc
0 0.5 1 0 k
(Orange M=50 Y=100) Pc
0 0.375 0.75 0 k
(75% Orange M=37.5 Y=75) Pc
0 0.25 0.5 0 k
(50% Orange M=25 Y=50) Pc
0 0.125 0.25 0 k
(25% Orange M=12.5 Y=25) Pc
0.5 0.9 0 0 k
(Violet C=50 M=90) Pc
0.375 0.675 0 0 k
(75% Violet C=37.5 M=67.5) Pc
0.25 0.45 0 0 k
(50% Violet C=25 M=45 ) Pc
0.125 0.225 0 0 k
(25% Violet C=12.5 M=22.5) Pc
0.8 0 0 0 k
(Azure C=80) Pc
0.6 0 0 0 k
(75% Azure C=60) Pc
0.4 0 0 0 k
(50% Azure C=40) Pc
0.2 0 0 0 k
(25% Azure C=20) Pc
0 0 1 0 k
(Yellow) Pc
0 0 0.75 0 k
(75% Yellow) Pc
0 0 0.5 0 k
(50% Yellow) Pc
0 0 0.25 0 k
(25% Yellow) Pc
Bb
2 (White, Black) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(White, Black) Pc
Bb
0 0 0 0 Bh
2 (Black, White Radial) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Black, White Radial) Pc
Bb
2 (Copper) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Copper) Pc
Bb
2 (Rainbow) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Rainbow) Pc
Bb
0 0 0 0 Bh
2 (Violet Eye) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Violet Eye) Pc
Bb
2 (Tropical Sunset) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Tropical Sunset) Pc
(Mediterranean Tiles) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Mediterranean Tiles) Pc
(Pyramids) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Pyramids) Pc
(Honeycomb) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Honeycomb) Pc
(Jungle Stripes) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Jungle Stripes) Pc
(Azure Rings) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Azure Rings) Pc
(Camouflage) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Camouflage) Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 0 79 128 255 Lb
(Layer 1) Ln
0 A
0 To
1 0 0 1 233.731 650.5259 0 Tp
0 Tv
TP
0 Tr
0 O
0 0 0 1 k
0 J 0 j 1 w 4 M []0 d0 XR
%_ 0 50 XQ
/_Myriad-Roman 12 9.9719 -3 Tf
0 Ts
100 100 Tz
0 Tt
%_0 0 100 100 Xu
%AI55J_GlyphSubst: GlyphSubstNone 
1 TA
%_ 0 XL
0 TY
0 TV
36 0 Xb
XB
0 0 5 TC
100 100 200 TW
25 TG
0 0 0 Ti
0 Ta
0 1 2 2 3 Th
0 Tq
0 Tg
0 0 Tl
0 Tc
0 Tw
(X+2Y) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 162.731 650.5259 0 Tp
0 Tv
TP
0 Tr
(2X+Y) Tx 1 0 Tk
(\r) TX 
TO
uu1 g
228.272 655.2671 m
227.0317 655.6416 226.2256 655.9868 225.2314 656.3857 c
225.2314 652.6025 l
225.5869 652.772 227.0317 653.3472 228.272 653.7217 c
229.5991 654.1226 230.8022 654.3965 231.583 654.4946 c
230.8022 654.5923 229.5991 654.8667 228.272 655.2671 c
fUu0 R
0 0 0 1 K
193.0005 654.4985 m
226.5005 654.4985 L
S0 O
0 0 0 1 k
228.272 655.2671 m
227.0317 655.6416 226.2256 655.9868 225.2314 656.3857 c
225.2314 652.6025 l
225.5869 652.772 227.0317 653.3472 228.272 653.7217 c
229.5991 654.1226 230.8022 654.3965 231.583 654.4946 c
230.8022 654.5923 229.5991 654.8667 228.272 655.2671 c
fUU/BBAccumRotation (3.141593) XT
0 To
1 0 0 1 208 659 0 Tp
0 Tv
TP
0 Tr
(1) Tx 1 0 Tk
(\r) TX 
TO
1 Ap
219.1665 620.8333 m
201.1665 620.8333 L
201.1665 626.1667 L
219.1665 626.1667 L
219.1665 620.8333 L
nLB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_typography_AI5 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
